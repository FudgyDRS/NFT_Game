{"version":3,"sources":["asset/image/ApeLogo.png","constants/chainId.ts","components/SidebarData.tsx","components/Submenu.tsx","constants/abi/index.ts","model/formatting.ts","model/Currency.ts","model/CurrencyValue.ts","model/TransactionStatus.ts","constants/currencies.ts","constants/blacklist.ts","providers/chainState/context.ts","hooks/useChainCalls.ts","hooks/useMulticallAddress.ts","hooks/useBlockMeta.ts","hooks/useDebounce.ts","hooks/useDebouncePair.ts","model/config/default.ts","providers/config/context.ts","hooks/useEthers.ts","hooks/useContractCall.ts","providers/config/reducer.ts","providers/config/provider.tsx","providers/blockNumber/context.ts","providers/blockNumber/reducer.ts","providers/blockNumber/provider.tsx","providers/chainState/callsReducer.ts","providers/chainState/chainStateReducer.ts","providers/devtools.ts","providers/chainState/multicall.ts","providers/chainState/provider.tsx","providers/chainState/useDevtoolsReporting.ts","providers/EthersProvider.tsx","providers/notifications/model.ts","providers/notifications/context.ts","providers/notifications/reducer.ts","providers/notifications/provider.tsx","providers/NetworkActivator.tsx","providers/transactions/model.ts","providers/transactions/context.ts","providers/transactions/reducer.ts","providers/transactions/provider.tsx","helpers/chain.ts","providers/LocalMulticallProvider.tsx","helpers/common.ts","helpers/address.ts","helpers/transaction.ts","helpers/contract.ts","providers/DAppProvider.tsx","hooks/usePromiseTransaction.ts","hooks/useContractFunction.ts","hooks/useEtherBalance.ts","hooks/useTokenBalance.ts","hooks/useTokenAllowance.ts","hooks/useLocalStorage.ts","hooks/useTransactions.ts","hooks/useInterval.tsx","hooks/useNotifications.ts","hooks/useSendTransaction.ts","hooks/useGasPrice.ts","hooks/useLookupAddress.ts","Identicon.tsx","components/ConnectButton.tsx","components/AccountModal.tsx","components/Sidebar.tsx","abi/KittyCake.tsx","abi/BlockCreatures.tsx","pages/Overview.tsx","components/MintButton.tsx","pages/Mint.tsx","pages/Portfolio.tsx","pages/Stake.tsx","pages/Swap.tsx","App.tsx","components/Footer.tsx","index.tsx"],"names":["ChainId","SidebarData","title","path","icon","iconClosed","iconOpened","subnav","SidebarLink","styled","Link","SidebarLabel","span","DropdownLink","Submenu","item","React","useState","setSubnav","to","onClick","map","subnavItem","index","MultiCallABI","Interface","MultiCall","abi","ERC20Interface","ERC20","ERC20MockInterface","ERC20Mock","CHAIN_NAMES","Mainnet","Ropsten","Kovan","Rinkeby","Goerli","xDai","Polygon","Moonriver","Mumbai","Harmony","Localhost","Hardhat","BSC","BSC_Testnet","FTM","FTM_Testnet","MULTICALL_ADDRESSES","TEST_CHAINS","LOCAL_CHAINS","DEFAULT_OPTIONS","decimals","thousandSeparator","decimalSeparator","significantDigits","Infinity","useFixedPrecision","fixedPrecisionDigits","prefix","suffix","INPUT_REGEX","formatCurrency","options","value","test","TypeError","number","integer","length","replace","stripFrontZeroes","substring","getIntegerPart","thousands","separator","count","resultValue","split","i","splice","join","splitThousands","decimal","padStart","getDecimalPart","digits","padEnd","toFixed","integerLength","stripEndZeroes","toSignificant","joinDecimals","formatNumber","Currency","name","ticker","formattingOptions","this","overrideOptions","FiatCurrency","NativeCurrency","chainId","Token","address","CurrencyValue","currency","toString","format","other","fn","checkCurrency","x","add","sub","mul","div","mod","eq","lt","lte","gt","gte","isZero","BigNumber","from","transactionErrored","transaction","Ether","Dai","KovanEther","KovanDai","NATIVE_CURRENCY","BLACKLISTED_ADDRESSES","BlacklistId","ChainStateContext","createContext","multicallAddress","dispatchCalls","useChainState","useContext","useChainCalls","calls","useEffect","filteredCalls","filter","Boolean","type","JSON","stringify","useMemo","call","state","data","useChainCall","useMulticallAddress","GET_CURRENT_BLOCK_TIMESTAMP_CALL","encodeFunctionData","GET_CURRENT_BLOCK_DIFFICULTY_CALL","useBlockMeta","timestamp","difficulty","undefined","Date","toNumber","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebouncePair","first","second","DEFAULT_CONFIG","pollingInterval","supportedChains","notifications","checkInterval","expirationPeriod","ConfigContext","config","updateConfig","useConfig","useUpdateConfig","useEthers","result","useWeb3React","activateBrowserWallet","useCallback","onError","throwErrors","a","injected","InjectedConnector","supportedChainIds","Function","activate","warnOnInvalidContractCall","console","warn","method","args","encodeCallData","useContractCall","useContractCalls","results","idx","decodeFunctionResult","configReducer","action","merge","ConfigProvider","children","useReducer","reducedConfig","dispatch","Provider","BlockNumberContext","useBlockNumber","blockNumberReducer","current","blockNumber","BlockNumberProvider","library","update","on","off","debouncedState","callsReducer","finalState","findIndex","_","chainStateReducer","newState","oldState","Object","entries","error","hook","ABI","multicall","provider","requests","contract","Contract","aggregate","blockTag","stateForAddress","notifyDevtools","notification","init","Error","message","send","ChainStateProvider","multicallAddresses","dispatchState","debouncedCalls","uniqueCalls","unique","request","find","push","getUnique","uniqueCallsJSON","account","useDevtoolsReporting","start","now","then","duration","catch","provided","window","__USEDAPP_DEVTOOLS_HOOK__","EthersProvider","getLibrary","Web3Provider","DEFAULT_NOTIFICATIONS","NotificationsContext","addNotification","removeNotification","useNotificationsContext","notificationReducer","chainState","id","notificationId","NotificationsProvider","nanoid","submittedAt","NetworkActivator","connectedChainId","active","connector","readOnlyChainId","readOnlyUrls","eagerConnect","isAuthorized","NetworkConnector","defaultChainId","urls","getStoredTransactionState","receipt","status","DEFAULT_STORED_TRANSACTIONS","TransactionsContext","transactions","addTransaction","useTransactionsContext","transactionReducer","payload","values","includes","isChainId","TransactionProvider","useLocalStorage","storage","setStorage","transactionName","updateTransactions","checkTransaction","tx","shouldCheck","getTransactionReceipt","hash","lastCheckedBlockNumber","chainTransactions","newTransactions","newTransaction","blocksSinceCheck","minutesPending","etherscanNetworkPrefix","getChainName","toLocaleLowerCase","getExplorerAddressLink","getExplorerTransactionLink","transactionHash","isTestChain","isLocalChain","LocalMulticallState","shortenString","str","shortenAddress","utils","getAddress","shortenIfAddress","compareAddress","firstAddress","secondAddress","parsedFirstAddress","parsedSecondAddress","addressEqual","shortenTransactionHash","shortenIfTransactionHash","deployContract","contractAbi","signer","factory","ContractFactory","bytecode","deploy","deployTransaction","wait","LocalMulticallProvider","Unknown","localMulticallState","setLocalMulticallState","multicallBlockNumber","setMulticallBlockNumber","Deployed","Deploying","getSigner","deployMulticall","multicallABI","contractAddress","NonLocal","awaitingMulticallBlock","DAppProvider","DAppProviderWithConfig","multicallAddressesMerged","usePromiseTransaction","setState","promiseTransaction","transactionPromise","errorMessage","reason","connectContractToSigner","connect","useContractFunction","functionName","events","setEvents","contractWithSigner","logs","log","interface","parseLog","useEtherBalance","useTokenBalance","tokenAddress","useTokenAllowance","ownerAddress","spenderAddress","getItem","key","localStorage","parse","setValue","toStore","setItem","removeItem","useTransactions","useInterval","callback","savedCallback","useRef","setInterval","clearInterval","getExpiredNotifications","creationTime","useNotifications","chainNotifications","expiredNotification","useSendTransaction","sendTransaction","transactionRequest","useGasPrice","gasPrice","setGasPrice","getGasPrice","updateGasPrice","useLookupAddress","ens","setEns","mounted","lookupAddress","StyledIdenticon","Identicon","ref","innerHTML","appendChild","Jazzicon","parseInt","slice","ConnectButton","handleOpenModal","etherBalance","display","alignItems","background","borderRadius","py","px","color","fontSize","parseFloat","formatEther","bg","border","_hover","borderStyle","borderColor","backgroundColor","m","height","fontWeight","mr","AccountModal","isOpen","onClose","deactivate","isCentered","size","pt","pb","mb","justifyContent","variant","textDecoration","mt","lineHeight","ml","alignContent","Copy","href","isExternal","ExternalLink","borderBottomLeftRadius","borderBottomRightRadius","p","textAlign","Nav","SidebarNav","sidebar","NavIcon","ConnectButtonBox","Header","SidebarWrap","Sidebar","setSidebar","showSidebar","useDisclosure","onOpen","theme","interfaceKittyCake","KittyCakeAbi","interfaceMoolah","MoolahAbi","tokenNFT","interfaceNFT","NFTAbi","BlockCreatures","Overview","tokenMeowMoon","myBalance","randoBalance","rando2Balance","contractDividends","GetTotalDividendsDistributed","_id","balanceMoolah","BalanceOf","MonstersOwned","t1","Monsters","GameOwner","OwnerOf","className","formatUnits","colorScheme","Train","MintButton","handleMintModal","width","MintDefault","MintButtonBox","Mint","PortfolioDefault","spin","keyframes","ParseNumber","num","v","String","Math","trunc","l","charAt","myAddress","Moralis","loading","document","getElementById","hidden","tbody","createElement","replaceWith","tr","appId","serverUrl","Web3API","token","getTokenPrice","chain","WBNBPrice","getTokenBalances","token_address","ReloadScreenData","usdPrice","WBNB","ethers","WBNBABI","pcsV2FactoryContract","pancakeswapV2","accountTokens","balance","contractContract","moolahAbi","functions","totalSupply","getPair","pairAddress","pancakeswapV2Pair","getReserves","pairTokens","pairLiquidity","sortTokens","mCap","Number","accountValue","tokenPrice","symbol","logo","thumbnail","mcap","td1","textContent","td2","td3","temp","td4","td5","td6","td7","tokenA","tokenB","tokens","Portfolio","input","setInput","data2","col1","col2","col3","col4","col5","col6","col7","columns","accessor","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useMoralis","providers","ethereum","spinAnimation","placeholder","marginLeft","onInput","e","target","ReloadData","overflowY","css","float","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isNumeric","render","pl","isSorted","isSortedDesc","TriangleDown","TriangleUp","row","getRowProps","cells","cell","getCellProps","spacing","aligh","animation","src","require","default","boxSize","align","Stake","Swap","App","component","exact","FooterDefault","Footer","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.41a5535d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ApeLogo.88844554.png\";","export enum ChainId {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Goerli = 5,\n  Kovan = 42,\n  xDai = 100,\n  Polygon = 137,\n  Moonriver = 1285,\n  Mumbai = 80001,\n  Harmony = 1666600000,\n  Localhost = 1337,\n  Hardhat = 31337,\n  BSC = 56,\n  BSC_Testnet = 97,\n  FTM = 250,\n  FTM_Testnet = 4002\n}\n\nexport const CHAIN_NAMES = {\n  [ChainId.Mainnet]: \"Mainnet\",\n  [ChainId.Ropsten]: \"Ropsten\",\n  [ChainId.Kovan]: \"Kovan\",\n  [ChainId.Rinkeby]: \"Rinkeby\",\n  [ChainId.Goerli]: \"Goerli\",\n  [ChainId.xDai]: \"xDai\",\n  [ChainId.Polygon]: \"Polygon\",\n  [ChainId.Moonriver]: \"Moonriver\",\n  [ChainId.Mumbai]: \"Mumbai\",\n  [ChainId.Harmony]: \"Harmony\",\n  [ChainId.Localhost]: \"Localhost\",\n  [ChainId.Hardhat]: \"Hardhat\",\n  [ChainId.BSC]: \"BSC\",\n  [ChainId.BSC_Testnet]: \"BSC_Testnet\",\n  [ChainId.FTM]: \"FTM\",\n  [ChainId.FTM_Testnet]: \"FTM_Testnet\"\n};\n\nexport const MULTICALL_ADDRESSES = {\n  [ChainId.Mainnet]: \"0xeefba1e63905ef1d7acba5a8513c70307c1ce441\",\n  [ChainId.Ropsten]: \"0x53c43764255c17bd724f74c4ef150724ac50a3ed\",\n  [ChainId.Rinkeby]: \"0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821\",\n  [ChainId.Goerli]: \"0x77dca2c955b15e9de4dbbcf1246b4b85b651e50e\",\n  [ChainId.Kovan]: \"0x2cc8688c5f75e365aaeeb4ea8d6a480405a48d2a\",\n  [ChainId.BSC]: \"0x41263cba59eb80dc200f3e2544eda4ed6a90e76c\",\n  [ChainId.xDai]: \"0xb5b692a88bdfc81ca69dcb1d924f59f0413a602a\",\n  [ChainId.Polygon]: \"0x11ce4B23bD875D7F5C6a31084f55fDe1e9A87507\",\n  [ChainId.Moonriver]: \"0xa9177F8d98DAaB74C24715Ba0A81b73654710523\",\n  [ChainId.Mumbai]: \"0x08411ADd0b5AA8ee47563b146743C13b3556c9Cc\",\n  [ChainId.Harmony]: \"0xFE4980f62D708c2A84D3929859Ea226340759320\",\n  [ChainId.BSC_Testnet]: \"0xBeA7a0Ea352fc5F7BC92566509964742186796c8\",\n  [ChainId.FTM_Testnet]: \"0x23aDdd9b36ae4E5B83a70bbBF93709C44299A565\"\n};\n\nexport const TEST_CHAINS = [\n  ChainId.Ropsten,\n  ChainId.Kovan,\n  ChainId.Rinkeby,\n  ChainId.Goerli,\n  ChainId.Mumbai,\n  ChainId.Localhost,\n  ChainId.Hardhat\n];\n\nexport const LOCAL_CHAINS = [ChainId.Localhost, ChainId.Hardhat];\n","//import React, { FC } from \"react\";\n//import { IconContext } from \"react-icons\";\nimport { FaCog } from \"react-icons/fa\";\nimport { RiFolderUserLine, RiAddCircleLine, RiCake3Line } from \"react-icons/ri\";\nimport { GrMoney } from \"react-icons/gr\";\nimport { MdCompareArrows } from \"react-icons/md\";\nimport { AiFillCaretDown, AiFillCaretUp, AiOutlineHome, AiOutlineUser } from \"react-icons/ai\";\nimport { SidebarItem } from \"../models/SidebarItem\";\n\nexport const SidebarData: SidebarItem[] = [\n  {\n    title: \"Overview\",\n    path: \"/overview\",\n    icon: <AiOutlineHome />,\n    iconClosed: <AiFillCaretDown />,\n    iconOpened: <AiFillCaretUp />,\n    subnav: [\n      {\n        title: \"Users\",\n        path: \"/overview/users\",\n        icon: <AiOutlineUser />\n      },\n      {\n        title: \"Money\",\n        path: \"/overview/money\",\n        icon: <GrMoney />\n      }\n    ]\n  },\n  {\n    title: \"Mint\",\n    path: \"/mint\",\n    icon: <RiAddCircleLine />\n  },\n  {\n    title: \"Portfolio\",\n    path: \"/portfolio\",\n    icon: <RiFolderUserLine />\n  },\n  {\n    title: \"Stake\",\n    path: \"/stake\",\n    icon: <RiCake3Line />\n  },\n  {\n    title: \"Swap\",\n    path: \"/swap\",\n    icon: <MdCompareArrows />\n  },\n  {\n    title: \"Configurations\",\n    path: \"/configurations\",\n    icon: <FaCog />\n  }\n];\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { SidebarItem } from \"../models/SidebarItem\";\n\ntype SidebarLinkProps = {\n  item: SidebarItem;\n};\n\nconst SidebarLink = styled(Link)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 3.75rem;\n  font-size: 1.125rem;\n  padding: 2rem;\n  text-decoration: none;\n  color: #ffffff;\n\n  &:hover {\n    background-color: #1f1f1b;\n    border-left: 4px solid #6d44dc;\n  }\n`;\n\nconst SidebarLabel = styled.span`\n  margin-start: 1rem;\n  margin-left: 1rem;\n`;\n\nconst DropdownLink = styled(Link)`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 3.75rem;\n  font-size: 1.125rem;\n  padding-left: 3rem;\n  text-decoration: none;\n  color: #ffffff;\n\n  &:hover {\n    background-color: #6d44dc;\n  }\n`;\n\nconst Submenu: FC<SidebarLinkProps> = ({ item }) => {\n  const [subnav, setSubnav] = React.useState(false);\n  const showSubnav = () => setSubnav(!subnav);\n\n  return (\n    <>\n      <SidebarLink to={item.path} onClick={showSubnav}>\n        {item.icon}\n        <SidebarLabel>{item.title}</SidebarLabel>\n        <div>{item?.subnav && subnav ? item?.iconClosed : item?.iconOpened}</div>\n      </SidebarLink>\n      {subnav &&\n        item?.subnav?.map((subnavItem, index) => {\n          return (\n            <DropdownLink key={index} to={subnavItem.path}>\n              {subnavItem.icon}\n              <SidebarLabel>{subnavItem.title}</SidebarLabel>\n            </DropdownLink>\n          );\n        })}\n    </>\n  );\n};\n\nexport default Submenu;\n","import { Interface } from \"@ethersproject/abi\";\nimport MultiCall from \"./MultiCall.json\";\nimport ERC20 from \"./ERC20.json\";\nimport ERC20Mock from \"./ERC20Mock.json\";\n\nconst MultiCallABI = new Interface(MultiCall.abi);\n\nexport { MultiCall, MultiCallABI };\n\nconst ERC20Interface = new Interface(ERC20.abi);\n\nexport { ERC20, ERC20Interface };\n\nconst ERC20MockInterface = new Interface(ERC20Mock.abi);\n\nexport { ERC20Mock, ERC20MockInterface };\n","export const DEFAULT_OPTIONS = {\n  decimals: 0,\n  thousandSeparator: \",\",\n  decimalSeparator: \".\",\n  significantDigits: Infinity,\n  useFixedPrecision: false,\n  fixedPrecisionDigits: 0,\n  prefix: \"\",\n  suffix: \"\"\n};\n\nexport type CurrencyFormatOptions = typeof DEFAULT_OPTIONS;\n\nconst INPUT_REGEX = /^\\d*$/;\n\nexport function formatCurrency(options: CurrencyFormatOptions, value: string): string {\n  if (!INPUT_REGEX.test(value)) {\n    throw new TypeError(\"Invalid input, decimal string expected.\");\n  }\n  const number = formatNumber(options, value);\n  return [options.prefix, number, options.suffix].join(\"\");\n}\n\nfunction formatNumber(options: CurrencyFormatOptions, value: string) {\n  const integer = getIntegerPart(value, options.decimals);\n  const thousands = splitThousands(integer, options.thousandSeparator);\n  const decimal = getDecimalPart(value, options.decimals);\n  const digits = options.useFixedPrecision\n    ? toFixed(decimal, options.fixedPrecisionDigits)\n    : toSignificant(decimal, integer.length, options.significantDigits);\n  return joinDecimals(thousands, digits, options.decimalSeparator);\n}\n\nfunction getIntegerPart(value: string, decimals: number) {\n  if (value.length <= decimals) {\n    return \"0\";\n  } else {\n    const fragment = value.substring(0, value.length - decimals);\n    return stripFrontZeroes(fragment);\n  }\n}\n\nfunction stripFrontZeroes(value: string) {\n  const stripped = value.replace(/^0+/, \"\");\n  return stripped || \"0\";\n}\n\nfunction splitThousands(value: string, separator: string) {\n  const count = value.length / 3;\n  const resultValue = value.split(\"\");\n  for (let i = 1; i < count; i++) {\n    resultValue.splice(-4 * i + 1, 0, separator);\n  }\n  return resultValue.join(\"\");\n}\n\nfunction getDecimalPart(value: string, decimals: number) {\n  if (value.length <= decimals) {\n    return value.padStart(decimals, \"0\");\n  } else {\n    return value.substring(value.length - decimals);\n  }\n}\n\nfunction joinDecimals(integer: string, decimals: string, separator: string) {\n  if (!decimals) {\n    return integer;\n  } else {\n    return `${integer}${separator}${decimals}`;\n  }\n}\n\nfunction toSignificant(decimal: string, integerLength: number, significantDigits: number) {\n  const length = significantDigits - integerLength;\n  if (length > decimal.length) {\n    return stripEndZeroes(decimal);\n  } else {\n    return stripEndZeroes(decimal.substring(0, length));\n  }\n}\n\nfunction stripEndZeroes(value: string) {\n  return value.replace(/0+$/, \"\");\n}\n\nfunction toFixed(decimal: string, fixedPrecisionDigits: number) {\n  if (fixedPrecisionDigits > decimal.length) {\n    return decimal.padEnd(fixedPrecisionDigits, \"0\");\n  } else {\n    return decimal.substring(0, fixedPrecisionDigits);\n  }\n}\n","import { ChainId } from \"../constants\";\nimport { CurrencyFormatOptions, DEFAULT_OPTIONS, formatCurrency } from \"./formatting\";\n\nexport class Currency {\n  public formattingOptions: CurrencyFormatOptions;\n\n  constructor(\n    readonly name: string,\n    readonly ticker: string,\n    readonly decimals: number,\n    formattingOptions: Partial<CurrencyFormatOptions> = {}\n  ) {\n    this.formattingOptions = { ...DEFAULT_OPTIONS, decimals, ...formattingOptions };\n  }\n\n  format(value: string, overrideOptions: Partial<CurrencyFormatOptions> = {}) {\n    return formatCurrency({ ...this.formattingOptions, ...overrideOptions }, value);\n  }\n}\n\nexport class FiatCurrency extends Currency {\n  constructor(\n    name: string,\n    ticker: string,\n    decimals = 2,\n    formattingOptions: Partial<CurrencyFormatOptions> = {}\n  ) {\n    super(name, ticker, decimals, {\n      useFixedPrecision: true,\n      fixedPrecisionDigits: decimals,\n      ...formattingOptions\n    });\n  }\n}\n\nexport class NativeCurrency extends Currency {\n  constructor(\n    name: string,\n    ticker: string,\n    readonly chainId: ChainId,\n    decimals = 18,\n    formattingOptions: Partial<CurrencyFormatOptions> = {}\n  ) {\n    super(name, ticker, decimals, {\n      suffix: ` ${ticker}`,\n      significantDigits: 6,\n      ...formattingOptions\n    });\n  }\n}\n\nexport class Token extends Currency {\n  constructor(\n    name: string,\n    ticker: string,\n    readonly chainId: ChainId,\n    readonly address: string,\n    decimals = 18,\n    formattingOptions: Partial<CurrencyFormatOptions> = {}\n  ) {\n    super(name, ticker, decimals, {\n      suffix: ` ${ticker}`,\n      significantDigits: 6,\n      ...formattingOptions\n    });\n  }\n}\n","import { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Currency } from \"./Currency\";\nimport { CurrencyFormatOptions } from \"./formatting\";\n\nexport class CurrencyValue {\n  constructor(readonly currency: Currency, readonly value: BigNumber) {}\n\n  static fromString(currency: Currency, value: string) {\n    return new CurrencyValue(currency, BigNumber.from(value));\n  }\n\n  static zero(currency: Currency) {\n    return new CurrencyValue(currency, BigNumber.from(0));\n  }\n\n  toString() {\n    return this.value.toString();\n  }\n\n  format(overrideOptions: Partial<CurrencyFormatOptions> = {}) {\n    return this.currency.format(this.value.toString(), overrideOptions);\n  }\n\n  private checkCurrency(other: CurrencyValue) {\n    if (this.currency !== other.currency) {\n      throw new TypeError(`Currency mismatch ${this.currency.ticker} != ${other.currency.ticker}`);\n    }\n  }\n\n  map(fn: (value: BigNumber) => BigNumber) {\n    return new CurrencyValue(this.currency, fn(this.value));\n  }\n\n  add(other: CurrencyValue) {\n    this.checkCurrency(other);\n    return this.map((x) => x.add(other.value));\n  }\n\n  sub(other: CurrencyValue) {\n    this.checkCurrency(other);\n    return this.map((x) => x.sub(other.value));\n  }\n\n  mul(value: BigNumberish) {\n    return this.map((x) => x.mul(value));\n  }\n\n  div(value: BigNumberish) {\n    return this.map((x) => x.div(value));\n  }\n\n  mod(value: BigNumberish) {\n    return this.map((x) => x.mod(value));\n  }\n\n  equals(other: CurrencyValue) {\n    return this.currency === other.currency && this.value.eq(other.value);\n  }\n\n  lt(other: CurrencyValue) {\n    this.checkCurrency(other);\n    return this.value.lt(other.value);\n  }\n\n  lte(other: CurrencyValue) {\n    this.checkCurrency(other);\n    return this.value.lte(other.value);\n  }\n\n  gt(other: CurrencyValue) {\n    this.checkCurrency(other);\n    return this.value.gt(other.value);\n  }\n\n  gte(other: CurrencyValue) {\n    this.checkCurrency(other);\n    return this.value.gte(other.value);\n  }\n\n  isZero() {\n    return this.value.isZero();\n  }\n}\n","import { ChainId } from \"../constants\";\nimport { TransactionResponse, TransactionReceipt } from \"@ethersproject/abstract-provider\";\n\nexport type TransactionState = \"None\" | \"Mining\" | \"Success\" | \"Fail\" | \"Exception\";\n\nexport interface TransactionStatus {\n  status: TransactionState;\n  transaction?: TransactionResponse;\n  receipt?: TransactionReceipt;\n  chainId?: ChainId;\n  errorMessage?: string;\n}\n\nexport function transactionErrored(transaction: TransactionStatus) {\n  return \"errorMessage\" in transaction;\n}\n","import { NativeCurrency, Token } from \"../model\";\nimport { ChainId } from \"./chainId\";\n\nexport const Ether = new NativeCurrency(\"Ether\", \"ETH\", ChainId.Mainnet);\nexport const Dai = new Token(\n  \"Dai\",\n  \"DAI\",\n  ChainId.Mainnet,\n  \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n);\n\nexport const KovanEther = new NativeCurrency(\"Kovan Ether\", \"KETH\", ChainId.Kovan);\nexport const KovanDai = new Token(\n  \"Dai\",\n  \"DAI\",\n  ChainId.Kovan,\n  \"0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa\"\n);\n\nexport const BSC = new NativeCurrency(\"BSC\", \"BNB\", ChainId.BSC);\nexport const BSC_Testnet = new Token(\n  \"BSC Testnet\",\n  \"tBNB\",\n  ChainId.BSC_Testnet,\n  \"0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa\"\n);\n\nexport const FTM = new NativeCurrency(\"Fantom\", \"FTM\", ChainId.FTM);\nexport const FTM_Testnet = new Token(\n  \"FTM Testnet\",\n  \"tFTM\",\n  ChainId.FTM_Testnet,\n  \"0x23aDdd9b36ae4E5B83a70bbBF93709C44299A565\"\n);\n\nexport const NATIVE_CURRENCY = {\n  [ChainId.Mainnet]: Ether,\n  [ChainId.Kovan]: KovanEther,\n  [ChainId.BSC]: BSC,\n  [ChainId.BSC_Testnet]: BSC_Testnet,\n  [ChainId.FTM]: FTM,\n  [ChainId.FTM_Testnet]: FTM_Testnet\n};\n","// @ts-nocheck\n\nexport const BLACKLISTED_ADDRESSES = [\n  \"0x119e2ad8f0c85c6f61afdf0df69693028cdc10be\",\n  \"0x04645027122c9f152011f128c7085449b27cb6d7\",\n  \"0x4e1191fa01bb4ec0dcca114a958bf5c204c285fb\",\n  \"0xef27b9cb67aa93ec3494a60f1ea9380e86175b26\",\n  \"0x585de5430f47aba099bebd21ef133272c38db7a6\",\n  \"0x5e48c354a5da2b0a8c203518d0fc7b9c58cc9329\",\n  \"0x17d1285bc68d9085f8e4b86fc565e452b29dc48f\",\n  \"0x9d89f8494694a9c9cec29c72b2aba9692fa76c47\",\n  \"0x5558447b06867ffebd87dd63426d61c868c45904\",\n  \"0x491b25000d386cd31307580171a510d32d7e64ee\",\n  \"0xb0557906c617f0048a700758606f64b33d0c41a6\",\n  \"0xd22202d23fe7de9e3dbe11a2a88f42f4cb9507cf\",\n  \"0x68d1569d1a6968f194b4d93f8d0b416c123a599f\",\n  \"0xc33fc11b55465045b3f1684bde4c0aa5c5f40124\",\n  \"0xb8a9704d48c3e3817cc17bc6d350b00d7caaecf6\",\n  \"0x5ec2a778717cf1a5018c6ae3a7a2957582a92007\",\n  \"0x0f37695b320f0b3610d31f480317bd3811940983\",\n  \"0x58c10c8e2b80fdb5613778125ddd1c93f8cc8983\",\n  \"0x202ea1329665a7ed6082cc8ee30baed6fe23d81a\"\n];\n\nexport const BlacklistId = {\n  [\"0x119e2ad8f0c85c6f61afdf0df69693028cdc10be\"]: \"Zepe.io\",\n  [\"0x04645027122c9f152011f128c7085449b27cb6d7\"]: \"ARKR.org\",\n  [\"0x4e1191fa01bb4ec0dcca114a958bf5c204c285fb\"]: \"bonuswallet.org\",\n  [\"0xef27b9cb67aa93ec3494a60f1ea9380e86175b26\"]: \"AGMC.io\",\n  [\"0x585de5430f47aba099bebd21ef133272c38db7a6\"]: \"SAFEMOON.IS\",\n  [\"0x5e48c354a5da2b0a8c203518d0fc7b9c58cc9329\"]: \"Swap7.org\",\n  [\"0x17d1285bc68d9085f8e4b86fc565e452b29dc48f\"]: \"VeloChain.io\",\n  [\"0x9d89f8494694a9c9cec29c72b2aba9692fa76c47\"]: \"Gabe\",\n  [\"0x5558447b06867ffebd87dd63426d61c868c45904\"]: \"BNBW.IO\",\n  [\"0x491b25000d386cd31307580171a510d32d7e64ee\"]: \"FF18.io\",\n  [\"0xb0557906c617f0048a700758606f64b33d0c41a6\"]: \"Zepe.io\",\n  [\"0xd22202d23fe7de9e3dbe11a2a88f42f4cb9507cf\"]: \"Minereum BSC\",\n  [\"0x68d1569d1a6968f194b4d93f8d0b416c123a599f\"]: \"AABEK.net\",\n  [\"0xc33fc11b55465045b3f1684bde4c0aa5c5f40124\"]: \"BNBw.io\",\n  [\"0xb8a9704d48c3e3817cc17bc6d350b00d7caaecf6\"]: \"ABFIN.org\",\n  [\"0x5ec2a778717cf1a5018c6ae3a7a2957582a92007\"]: \"Stakeable\",\n  [\"0x0f37695b320f0b3610d31f480317bd3811940983\"]: \"SafeGoku\",\n  [\"0x58c10c8e2b80fdb5613778125ddd1c93f8cc8983\"]: \"Kryoss.Net\",\n  [\"0x202ea1329665a7ed6082cc8ee30baed6fe23d81a\"]: \"NestFin.Net\"\n};\n","import { createContext, useContext } from \"react\";\nimport { Action } from \"./callsReducer\";\nimport { ChainState } from \"./model\";\n\nexport const ChainStateContext = createContext<{\n  value?: {\n    blockNumber: number;\n    state?: ChainState;\n    error?: unknown;\n  };\n  multicallAddress: string | undefined;\n  dispatchCalls: (action: Action) => void;\n}>({\n  multicallAddress: \"\",\n  dispatchCalls: () => {\n    // empty\n  }\n});\n\nexport function useChainState() {\n  return useContext(ChainStateContext);\n}\n","// @ts-nocheck\n\nimport { useContext, useEffect, useMemo } from \"react\";\nimport { ChainCall } from \"../providers/chainState/callsReducer\";\nimport { ChainStateContext } from \"../providers/chainState/context\";\nimport { Falsy } from \"../model/types\";\n\nexport function useChainCalls(calls: (ChainCall | Falsy)[]) {\n  const { dispatchCalls, value } = useContext(ChainStateContext);\n\n  useEffect(() => {\n    const filteredCalls = calls.filter(Boolean) as ChainCall[];\n    dispatchCalls({ type: \"ADD_CALLS\", calls: filteredCalls });\n    return () => dispatchCalls({ type: \"REMOVE_CALLS\", calls: filteredCalls });\n  }, [JSON.stringify(calls), dispatchCalls]);\n\n  return useMemo(\n    () => calls.map((call) => call && value?.state?.[call.address]?.[call.data]),\n    [JSON.stringify(calls), value]\n  );\n}\n\nexport function useChainCall(call: ChainCall | Falsy) {\n  return useChainCalls([call])[0];\n}\n","import { useContext } from \"react\";\nimport { ChainStateContext } from \"../providers/chainState/context\";\n\nexport function useMulticallAddress(): string | undefined {\n  return useContext(ChainStateContext).multicallAddress;\n}\n","import { MultiCallABI } from \"../constants\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { useChainCall } from \"./useChainCalls\";\nimport { useMulticallAddress } from \"./useMulticallAddress\";\n\nconst GET_CURRENT_BLOCK_TIMESTAMP_CALL = MultiCallABI.encodeFunctionData(\n  \"getCurrentBlockTimestamp\",\n  []\n);\nconst GET_CURRENT_BLOCK_DIFFICULTY_CALL = MultiCallABI.encodeFunctionData(\n  \"getCurrentBlockDifficulty\",\n  []\n);\n\nexport function useBlockMeta() {\n  const address = useMulticallAddress();\n  const timestamp = useChainCall(address && { address, data: GET_CURRENT_BLOCK_TIMESTAMP_CALL });\n  const difficulty = useChainCall(address && { address, data: GET_CURRENT_BLOCK_DIFFICULTY_CALL });\n\n  return {\n    timestamp:\n      timestamp !== undefined\n        ? new Date(BigNumber.from(timestamp).mul(1000).toNumber())\n        : undefined,\n    difficulty: difficulty !== undefined ? BigNumber.from(difficulty) : undefined\n  };\n}\n","import { useEffect, useState } from \"react\";\n\n// modified from https://usehooks.com/useDebounce/\nexport function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import { useEffect, useState } from \"react\";\n\n// modified from https://usehooks.com/useDebounce/\nexport function useDebouncePair<T, U>(first: T, second: U, delay: number): [T, U] {\n  const [debouncedValue, setDebouncedValue] = useState<[T, U]>([first, second]);\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue([first, second]);\n    }, delay);\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [first, second, delay]);\n\n  return debouncedValue;\n}\n","import { ChainId } from \"../../constants\";\nimport { FullConfig } from \"./Config\";\n\nexport const DEFAULT_CONFIG: FullConfig = {\n  pollingInterval: 15000,\n  supportedChains: [\n    ChainId.Mainnet,\n    ChainId.Goerli,\n    ChainId.Kovan,\n    ChainId.Rinkeby,\n    ChainId.Ropsten,\n    ChainId.xDai,\n    ChainId.Localhost,\n    ChainId.Hardhat,\n    ChainId.Polygon,\n    ChainId.Mumbai,\n    ChainId.Harmony,\n    ChainId.Moonriver,\n    ChainId.BSC,\n    ChainId.BSC_Testnet,\n    ChainId.FTM,\n    ChainId.FTM_Testnet\n  ],\n  notifications: {\n    checkInterval: 500,\n    expirationPeriod: 5000\n  }\n};\n","import { createContext, useContext } from \"react\";\nimport { FullConfig, Config } from \"../../model/config/Config\";\nimport { DEFAULT_CONFIG } from \"../../model/config/default\";\n\nexport const ConfigContext = createContext<{\n  config: FullConfig;\n  updateConfig: (config: Config) => void;\n}>({\n  config: DEFAULT_CONFIG,\n  updateConfig: () => undefined\n});\n\nexport function useConfig() {\n  const { config } = useContext(ConfigContext);\n  return config;\n}\n\nexport function useUpdateConfig() {\n  const { updateConfig } = useContext(ConfigContext);\n  return updateConfig;\n}\n","// @ts-nocheck\n\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { ChainId } from \"../constants\";\nimport { useCallback } from \"react\";\nimport { useConfig } from \"../providers/config/context\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\n\ntype ActivateBrowserWallet = (onError?: (error: Error) => void, throwErrors?: boolean) => void;\n\nexport type Web3Ethers = ReturnType<typeof useWeb3React> & {\n  library?: Web3Provider;\n  chainId?: ChainId;\n  activateBrowserWallet: ActivateBrowserWallet;\n};\n\nexport function useEthers(): Web3Ethers {\n  const result = useWeb3React<Web3Provider>();\n  const { supportedChains } = useConfig();\n  const activateBrowserWallet = useCallback<ActivateBrowserWallet>(\n    async (onError, throwErrors) => {\n      const injected = new InjectedConnector({ supportedChainIds: supportedChains });\n      if (onError instanceof Function) {\n        await result.activate(injected, onError, throwErrors);\n      } else {\n        await result.activate(injected, undefined, throwErrors);\n      }\n    },\n    [supportedChains]\n  );\n  return { ...result, activateBrowserWallet };\n}\n","// @ts-nocheck\n\nimport { Interface } from \"@ethersproject/abi\";\nimport { useMemo } from \"react\";\nimport { Falsy } from \"../model/types\";\nimport { useChainCalls } from \"./useChainCalls\";\nimport { ChainCall } from \"../providers/chainState/callsReducer\";\n\nfunction warnOnInvalidContractCall(call: ContractCall | Falsy) {\n  console.warn(\n    `Invalid contract call: address=${call && call.address} method=${call && call.method} args=${\n      call && call.args\n    }`\n  );\n}\n\nfunction encodeCallData(call: ContractCall | Falsy): ChainCall | Falsy {\n  try {\n    return (\n      call && { address: call.address, data: call.abi.encodeFunctionData(call.method, call.args) }\n    );\n  } catch {\n    warnOnInvalidContractCall(call);\n    return undefined;\n  }\n}\n\nexport interface ContractCall {\n  abi: Interface;\n  address: string;\n  method: string;\n  args: any[];\n}\n\nexport function useContractCall(call: ContractCall | Falsy): any[] | undefined {\n  return useContractCalls([call])[0];\n}\n\nexport function useContractCalls(calls: (ContractCall | Falsy)[]): (any[] | undefined)[] {\n  const results = useChainCalls(calls.map(encodeCallData));\n\n  return useMemo(\n    () =>\n      results.map((result, idx) => {\n        const call = calls[idx];\n        if (result === \"0x\") {\n          warnOnInvalidContractCall(call);\n          return undefined;\n        }\n        return call && result\n          ? (call.abi.decodeFunctionResult(call.method, result) as any[])\n          : undefined;\n      }),\n    [results]\n  );\n}\n","import { FullConfig, Config } from \"../..\";\nimport merge from \"lodash.merge\";\n\nexport function configReducer(state: FullConfig, action: Config): FullConfig {\n  return merge({}, state, action);\n}\n","import { ReactNode, useReducer } from \"react\";\nimport { Config } from \"../../model/config/Config\";\nimport { DEFAULT_CONFIG } from \"../../model/config/default\";\nimport { ConfigContext } from \"./context\";\nimport { configReducer } from \"./reducer\";\n\ninterface ConfigProviderProps {\n  children: ReactNode;\n  config: Config;\n}\n\nexport function ConfigProvider({ config, children }: ConfigProviderProps) {\n  const [reducedConfig, dispatch] = useReducer(configReducer, { ...DEFAULT_CONFIG, ...config });\n  return (\n    <ConfigContext.Provider\n      value={{ config: reducedConfig, updateConfig: dispatch }}\n      children={children}\n    />\n  );\n}\n","import { createContext, useContext } from \"react\";\n\nexport const BlockNumberContext = createContext<number | undefined>(undefined);\n\nexport function useBlockNumber() {\n  return useContext(BlockNumberContext);\n}\n","interface BlockNumberState {\n  [chainId: number]: number | undefined;\n}\n\ninterface BlockNumberChanged {\n  chainId: number;\n  blockNumber: number;\n}\n\nexport function blockNumberReducer(state: BlockNumberState = {}, action: BlockNumberChanged) {\n  const current = state[action.chainId];\n  if (!current || action.blockNumber > current) {\n    return {\n      ...state,\n      [action.chainId]: action.blockNumber\n    };\n  }\n  return state;\n}\n","import { useEffect, useReducer, ReactNode } from \"react\";\nimport { BlockNumberContext } from \"./context\";\nimport { blockNumberReducer } from \"./reducer\";\nimport { useEthers, useDebounce } from \"../../hooks\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport function BlockNumberProvider({ children }: Props) {\n  const { library, chainId } = useEthers();\n  const [state, dispatch] = useReducer(blockNumberReducer, {});\n\n  useEffect(() => {\n    if (library && chainId !== undefined) {\n      const update = (blockNumber: number) => dispatch({ chainId, blockNumber });\n      library.on(\"block\", update);\n      return () => {\n        library.off(\"block\", update);\n      };\n    }\n  }, [library, chainId]);\n\n  const debouncedState = useDebounce(state, 100);\n  const blockNumber = chainId !== undefined ? debouncedState[chainId] : undefined;\n\n  return <BlockNumberContext.Provider value={blockNumber} children={children} />;\n}\n","export type Action = AddCall | RemoveCall;\n\nexport interface ChainCall {\n  address: string;\n  data: string;\n}\n\ninterface AddCall {\n  type: \"ADD_CALLS\";\n  calls: ChainCall[];\n}\n\ninterface RemoveCall {\n  type: \"REMOVE_CALLS\";\n  calls: ChainCall[];\n}\n\nexport function callsReducer(state: ChainCall[] = [], action: Action) {\n  if (action.type === \"ADD_CALLS\") {\n    return [...state, ...action.calls];\n  } else {\n    let finalState = state;\n    for (const call of action.calls) {\n      const index = finalState.findIndex((x) => x.address === call.address && x.data === call.data);\n      if (index !== -1) {\n        finalState = finalState.filter((_, i) => i !== index);\n      }\n    }\n    return finalState;\n  }\n}\n","import { ChainState } from \"./model\";\n\nexport interface State {\n  [chainId: number]:\n    | {\n        blockNumber: number;\n        state?: ChainState;\n        error?: unknown;\n      }\n    | undefined;\n}\n\ntype Action = FetchSuccess | FetchError;\n\ninterface FetchSuccess {\n  type: \"FETCH_SUCCESS\";\n  chainId: number;\n  blockNumber: number;\n  state: ChainState;\n}\n\ninterface FetchError {\n  type: \"FETCH_ERROR\";\n  chainId: number;\n  blockNumber: number;\n  error: unknown;\n}\n\nexport function chainStateReducer(state: State = {}, action: Action) {\n  const current = state[action.chainId]?.blockNumber;\n  if (!current || action.blockNumber >= current) {\n    if (action.type === \"FETCH_SUCCESS\") {\n      let newState = action.state;\n      if (action.blockNumber === current) {\n        // merge with existing state to prevent requests coming out of order\n        // from overwriting the data\n        const oldState = state[action.chainId]?.state ?? {};\n        for (const [address, entries] of Object.entries(oldState)) {\n          newState = {\n            ...newState,\n            [address]: {\n              ...entries,\n              ...newState[address]\n            }\n          };\n        }\n      }\n      return {\n        ...state,\n        [action.chainId]: { blockNumber: action.blockNumber, state: newState }\n      };\n    } else if (action.type === \"FETCH_ERROR\") {\n      return {\n        ...state,\n        [action.chainId]: {\n          ...state[action.chainId],\n          blockNumber: action.blockNumber,\n          error: action.error\n        }\n      };\n    }\n  }\n  return state;\n}\n","import { ChainId } from \"../constants\";\nimport { ChainCall, ChainState } from \"./chainState\";\n\n// NOTE: If you modify this file please ensure consistency with\n// packages/extension/src/providers/events/Message.ts\n\ninterface Init {\n  type: \"INIT\";\n}\n\ninterface NetworkChanged {\n  type: \"NETWORK_CHANGED\";\n  chainId?: ChainId;\n  multicallAddress?: string;\n}\n\ninterface BlockNumberChanged {\n  type: \"BLOCK_NUMBER_CHANGED\";\n  chainId: ChainId;\n  blockNumber: number;\n}\n\ninterface AccountChanged {\n  type: \"ACCOUNT_CHANGED\";\n  address?: string;\n}\n\ninterface CallsChanged {\n  type: \"CALLS_CHANGED\";\n  chainId?: ChainId;\n  calls: ChainCall[];\n}\n\ninterface MulticallSuccess {\n  type: \"MULTICALL_SUCCESS\";\n  multicallAddress: string;\n  duration: number;\n  chainId: ChainId;\n  blockNumber: number;\n  state: ChainState;\n}\n\ninterface MulticallError {\n  type: \"MULTICALL_ERROR\";\n  multicallAddress: string;\n  duration: number;\n  calls: ChainCall[];\n  chainId: ChainId;\n  blockNumber: number;\n  error: any;\n}\n\ninterface GenericError {\n  type: \"GENERIC_ERROR\";\n  error: Error;\n}\n\ntype Notification =\n  | Init\n  | NetworkChanged\n  | BlockNumberChanged\n  | AccountChanged\n  | CallsChanged\n  | MulticallSuccess\n  | MulticallError\n  | GenericError;\n\nlet hook: any;\nif (typeof window !== \"undefined\") {\n  hook = (window as any).__USEDAPP_DEVTOOLS_HOOK__;\n}\n\n// immediately notify devtools that the page is using it\nnotifyDevtools({ type: \"INIT\" });\n\nexport function notifyDevtools(notification: Notification) {\n  if (!hook) {\n    return;\n  }\n  if (notification.type === \"INIT\") {\n    hook.init();\n  } else {\n    if (notification.type === \"MULTICALL_ERROR\" || notification.type === \"GENERIC_ERROR\") {\n      notification.error = getErrorMessage(notification.error);\n    }\n    hook.send(notification);\n  }\n}\n\nfunction getErrorMessage(error: unknown) {\n  if (error instanceof Error) {\n    return error.message;\n  } else {\n    return \"\" + error;\n  }\n}\n","import { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { Provider } from \"@ethersproject/providers\";\nimport { ChainCall } from \"./callsReducer\";\nimport { ChainState } from \"./model\";\n\nconst ABI = [\n  \"function aggregate(tuple(address target, bytes callData)[] calls) view returns (uint256 blockNumber, bytes[] returnData)\"\n];\n\nexport async function multicall(\n  provider: Provider,\n  address: string,\n  blockNumber: number,\n  requests: ChainCall[]\n): Promise<ChainState> {\n  if (requests.length === 0) {\n    return {};\n  }\n  const contract = new Contract(address, ABI, provider);\n  const [, results]: [BigNumber, string[]] = await contract.aggregate(\n    requests.map(({ address, data }) => [address, data]),\n    { blockTag: blockNumber }\n  );\n  const state: ChainState = {};\n  for (let i = 0; i < requests.length; i++) {\n    const { address, data } = requests[i];\n    const result = results[i];\n    const stateForAddress = state[address] ?? {};\n    stateForAddress[data] = result;\n    state[address] = stateForAddress;\n  }\n  return state;\n}\n","// @ts-nocheck\n\nimport { ReactNode, useEffect, useReducer } from \"react\";\nimport { useDebouncePair, useEthers } from \"../../hooks\";\nimport { useBlockNumber } from \"../blockNumber/context\";\nimport { ChainStateContext } from \"./context\";\nimport { chainStateReducer } from \"./chainStateReducer\";\nimport { callsReducer, ChainCall } from \"./callsReducer\";\nimport { multicall } from \"./multicall\";\nimport { notifyDevtools } from \"../devtools\";\nimport { useDevtoolsReporting } from \"./useDevtoolsReporting\";\n\ninterface Props {\n  children: ReactNode;\n  multicallAddresses: {\n    [chainId: number]: string;\n  };\n}\n\nexport function ChainStateProvider({ children, multicallAddresses }: Props) {\n  const { library, chainId } = useEthers();\n  const blockNumber = useBlockNumber();\n  const [calls, dispatchCalls] = useReducer(callsReducer, []);\n  const [state, dispatchState] = useReducer(chainStateReducer, {});\n\n  const [debouncedCalls, debouncedId] = useDebouncePair(calls, chainId, 50);\n  const uniqueCalls = debouncedId === chainId ? getUnique(debouncedCalls) : [];\n  // used for deep equality in hook dependencies\n  const uniqueCallsJSON = JSON.stringify(uniqueCalls);\n\n  const multicallAddress = chainId !== undefined ? multicallAddresses[chainId] : undefined;\n\n  useDevtoolsReporting(uniqueCallsJSON, uniqueCalls, blockNumber, multicallAddresses);\n\n  useEffect(() => {\n    if (library && blockNumber !== undefined && chainId !== undefined) {\n      if (!multicallAddress) {\n        console.error(`Missing multicall address for chain id ${chainId}`);\n        return;\n      }\n      const start = Date.now();\n      multicall(library, multicallAddress, blockNumber, uniqueCalls)\n        .then((state) => {\n          dispatchState({ type: \"FETCH_SUCCESS\", blockNumber, chainId, state });\n          notifyDevtools({\n            type: \"MULTICALL_SUCCESS\",\n            duration: Date.now() - start,\n            chainId,\n            blockNumber,\n            multicallAddress,\n            state\n          });\n        })\n        .catch((error) => {\n          console.error(error);\n          dispatchState({ type: \"FETCH_ERROR\", blockNumber, chainId, error });\n          notifyDevtools({\n            type: \"MULTICALL_ERROR\",\n            duration: Date.now() - start,\n            chainId,\n            blockNumber,\n            multicallAddress,\n            calls: uniqueCalls,\n            error\n          });\n        });\n    }\n  }, [library, blockNumber, chainId, multicallAddress, uniqueCallsJSON]);\n\n  const value = chainId !== undefined ? state[chainId] : undefined;\n  const provided = { value, multicallAddress, dispatchCalls };\n\n  return <ChainStateContext.Provider value={provided} children={children} />;\n}\n\nfunction getUnique(requests: ChainCall[]) {\n  const unique: ChainCall[] = [];\n  for (const request of requests) {\n    if (!unique.find((x) => x.address === request.address && x.data === request.data)) {\n      unique.push(request);\n    }\n  }\n  return unique;\n}\n","// @ts-nocheck\n\nimport { useEffect } from \"react\";\nimport { useEthers } from \"../../hooks\";\nimport { notifyDevtools } from \"../devtools\";\nimport { ChainCall } from \"./callsReducer\";\n\nexport function useDevtoolsReporting(\n  uniqueCallsJSON: string,\n  uniqueCalls: ChainCall[],\n  blockNumber: number | undefined,\n  multicallAddresses: { [network: string]: string }\n) {\n  const { chainId, account, error } = useEthers();\n\n  const multicall = chainId !== undefined ? multicallAddresses[chainId] : undefined;\n\n  useEffect(() => {\n    notifyDevtools({ type: \"NETWORK_CHANGED\", chainId, multicallAddress: multicall });\n  }, [chainId, multicall]);\n\n  useEffect(() => {\n    notifyDevtools({ type: \"ACCOUNT_CHANGED\", address: account ?? undefined });\n  }, [account]);\n\n  useEffect(() => {\n    notifyDevtools({ type: \"CALLS_CHANGED\", chainId, calls: uniqueCalls });\n  }, [uniqueCallsJSON]);\n\n  useEffect(() => {\n    if (chainId !== undefined && blockNumber !== undefined) {\n      notifyDevtools({ type: \"BLOCK_NUMBER_CHANGED\", chainId, blockNumber });\n    }\n  }, [blockNumber, chainId]);\n\n  useEffect(() => {\n    if (error !== undefined) {\n      notifyDevtools({ type: \"GENERIC_ERROR\", error });\n    }\n  }, [error]);\n}\n","import { Web3Provider } from \"@ethersproject/providers\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { ReactNode } from \"react\";\n\nconst DEFAULT_POLLING_INTERVAL = 15000;\n\ninterface EthersProviderProps {\n  children: ReactNode;\n  pollingInterval?: number;\n}\n\nexport function EthersProvider({ children, pollingInterval }: EthersProviderProps) {\n  function getLibrary(provider: any): Web3Provider {\n    const library = new Web3Provider(provider, \"any\");\n    library.pollingInterval = pollingInterval || DEFAULT_POLLING_INTERVAL;\n    return library;\n  }\n  return <Web3ReactProvider getLibrary={getLibrary}>{children}</Web3ReactProvider>;\n}\n","import { TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { ChainId } from \"../../constants\";\n\ntype NotificationPayload = { submittedAt: number } & (\n  | { type: \"transactionStarted\"; transaction: TransactionResponse; transactionName?: string }\n  | {\n      type: \"transactionSucceed\";\n      transaction: TransactionResponse;\n      receipt: TransactionReceipt;\n      transactionName?: string;\n    }\n  | {\n      type: \"transactionFailed\";\n      transaction: TransactionResponse;\n      receipt: TransactionReceipt;\n      transactionName?: string;\n    }\n  | { type: \"walletConnected\"; address: string }\n);\n\nexport type Notification = { id: string } & NotificationPayload;\n\nexport type AddNotificationPayload = {\n  chainId: ChainId;\n  notification: NotificationPayload;\n};\n\nexport type RemoveNotificationPayload = {\n  chainId: ChainId;\n  notificationId: string;\n};\n\nexport type Notifications = {\n  [T in ChainId]?: Notification[];\n};\n\nexport const DEFAULT_NOTIFICATIONS: Notifications = {};\n","import { createContext, useContext } from \"react\";\nimport {\n  Notifications,\n  DEFAULT_NOTIFICATIONS,\n  AddNotificationPayload,\n  RemoveNotificationPayload\n} from \"./model\";\n\nexport const NotificationsContext = createContext<{\n  notifications: Notifications;\n  addNotification: (payload: AddNotificationPayload) => void;\n  removeNotification: (payload: RemoveNotificationPayload) => void;\n}>({\n  notifications: DEFAULT_NOTIFICATIONS,\n  addNotification: () => undefined,\n  removeNotification: () => undefined\n});\n\nexport function useNotificationsContext() {\n  return useContext(NotificationsContext);\n}\n","import { ChainId } from \"../../constants\";\nimport { Notification, Notifications } from \"./model\";\n\ninterface AddNotification {\n  type: \"ADD_NOTIFICATION\";\n  chainId: ChainId;\n  notification: Notification;\n}\n\ninterface RemoveNotification {\n  type: \"REMOVE_NOTIFICATION\";\n  chainId: ChainId;\n  notificationId: string;\n}\n\ntype Action = AddNotification | RemoveNotification;\n\nexport function notificationReducer(state: Notifications, action: Action): Notifications {\n  const { chainId } = action;\n  const chainState = state[chainId] ?? [];\n\n  switch (action.type) {\n    case \"ADD_NOTIFICATION\":\n      return {\n        ...state,\n        [chainId]: [action.notification, ...chainState]\n      };\n    case \"REMOVE_NOTIFICATION\": {\n      return {\n        ...state,\n        [chainId]: chainState.filter((notification) => notification.id !== action.notificationId)\n      };\n    }\n  }\n}\n","import { ReactNode, useCallback, useEffect, useReducer } from \"react\";\nimport { useEthers } from \"../../hooks\";\nimport { NotificationsContext } from \"./context\";\nimport { AddNotificationPayload, DEFAULT_NOTIFICATIONS, RemoveNotificationPayload } from \"./model\";\nimport { notificationReducer } from \"./reducer\";\nimport { nanoid } from \"nanoid\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport function NotificationsProvider({ children }: Props) {\n  const [notifications, dispatch] = useReducer(notificationReducer, DEFAULT_NOTIFICATIONS);\n  const { chainId, account } = useEthers();\n\n  useEffect(() => {\n    if (account && chainId) {\n      dispatch({\n        type: \"ADD_NOTIFICATION\",\n        chainId: chainId,\n        notification: {\n          type: \"walletConnected\",\n          id: nanoid(),\n          submittedAt: Date.now(),\n          address: account\n        }\n      });\n    }\n  }, [account, chainId]);\n\n  const addNotification = useCallback(\n    ({ notification, chainId }: AddNotificationPayload) => {\n      dispatch({\n        type: \"ADD_NOTIFICATION\",\n        chainId,\n        notification: { ...notification, id: nanoid() }\n      });\n    },\n    [dispatch]\n  );\n\n  const removeNotification = useCallback(\n    ({ notificationId, chainId }: RemoveNotificationPayload) => {\n      dispatch({\n        type: \"REMOVE_NOTIFICATION\",\n        chainId,\n        notificationId\n      });\n    },\n    [dispatch]\n  );\n\n  return (\n    <NotificationsContext.Provider\n      value={{ addNotification, notifications, removeNotification }}\n      children={children}\n    />\n  );\n}\n","// @ts-nocheck\n\nimport { NetworkConnector } from \"@web3-react/network-connector\";\nimport { useEffect } from \"react\";\nimport { useEthers } from \"../hooks\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { useConfig } from \"./config/context\";\n\nexport function NetworkActivator() {\n  const { activate, account, chainId: connectedChainId, active, connector } = useEthers();\n  const { supportedChains, readOnlyChainId, readOnlyUrls } = useConfig();\n\n  useEffect(() => {\n    const eagerConnect = async () => {\n      const injected = new InjectedConnector({ supportedChainIds: supportedChains });\n      if (await injected.isAuthorized()) {\n        activate(injected);\n      }\n    };\n    eagerConnect();\n  }, []);\n\n  useEffect(() => {\n    if (readOnlyChainId && readOnlyUrls) {\n      if (\n        !active ||\n        (connector instanceof NetworkConnector && connectedChainId !== readOnlyChainId)\n      ) {\n        activate(\n          new NetworkConnector({ defaultChainId: readOnlyChainId, urls: readOnlyUrls || [] })\n        );\n      }\n    }\n  }, [readOnlyChainId, readOnlyUrls, active, account, connectedChainId, connector]);\n\n  return null;\n}\n","import { TransactionReceipt, TransactionResponse } from \"@ethersproject/providers\";\nimport { ChainId } from \"../../constants\";\n\nexport interface StoredTransaction {\n  transaction: TransactionResponse;\n  submittedAt: number;\n  receipt?: TransactionReceipt;\n  lastCheckedBlockNumber?: number;\n  transactionName?: string;\n}\n\nexport function getStoredTransactionState(transaction: StoredTransaction) {\n  if (transaction.receipt) {\n    return transaction?.receipt.status === 0 ? \"Fail\" : \"Success\";\n  }\n  return \"Mining\";\n}\n\nexport type StoredTransactions = {\n  [T in ChainId]?: StoredTransaction[];\n};\n\nexport const DEFAULT_STORED_TRANSACTIONS: StoredTransactions = {};\n","import { createContext, useContext } from \"react\";\nimport { DEFAULT_STORED_TRANSACTIONS, StoredTransaction, StoredTransactions } from \"./model\";\n\nexport const TransactionsContext = createContext<{\n  transactions: StoredTransactions;\n  addTransaction: (payload: StoredTransaction) => void;\n}>({\n  transactions: DEFAULT_STORED_TRANSACTIONS,\n  addTransaction: () => undefined\n});\n\nexport function useTransactionsContext() {\n  return useContext(TransactionsContext);\n}\n","import { ChainId } from \"../../constants\";\nimport { StoredTransaction, StoredTransactions } from \"./model\";\n\ntype Action = AddTransaction | UpdateTransactions;\n\ninterface AddTransaction {\n  type: \"ADD_TRANSACTION\";\n  payload: StoredTransaction;\n}\ninterface UpdateTransactions {\n  type: \"UPDATE_TRANSACTIONS\";\n  chainId: ChainId;\n  transactions: StoredTransaction[];\n}\n\nfunction isChainId(chainId: number): chainId is ChainId {\n  return Object.values(ChainId).includes(chainId);\n}\n\nexport function transactionReducer(state: StoredTransactions, action: Action): StoredTransactions {\n  switch (action.type) {\n    case \"ADD_TRANSACTION\": {\n      const { chainId } = action.payload.transaction;\n\n      if (isChainId(chainId)) {\n        return {\n          ...state,\n          [chainId]: [action.payload, ...(state[chainId] ?? [])]\n        };\n      } else {\n        throw TypeError(\"Unsupported chain\");\n      }\n    }\n    case \"UPDATE_TRANSACTIONS\":\n      return { ...state, [action.chainId]: [...action.transactions] };\n  }\n}\n","// @ts-nocheck\n\nimport { ReactNode, useCallback, useEffect, useReducer } from \"react\";\nimport { useEthers, useLocalStorage } from \"../../hooks\";\nimport { useBlockNumber } from \"../blockNumber/context\";\nimport { useNotificationsContext } from \"../notifications/context\";\nimport { TransactionsContext } from \"./context\";\nimport { DEFAULT_STORED_TRANSACTIONS, StoredTransaction } from \"./model\";\nimport { transactionReducer } from \"./reducer\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport function TransactionProvider({ children }: Props) {\n  const { chainId, library } = useEthers();\n  const blockNumber = useBlockNumber();\n  const [storage, setStorage] = useLocalStorage(\"transactions\");\n  const [transactions, dispatch] = useReducer(\n    transactionReducer,\n    storage ?? DEFAULT_STORED_TRANSACTIONS\n  );\n  const { addNotification } = useNotificationsContext();\n\n  useEffect(() => {\n    setStorage(transactions);\n  }, [transactions]);\n\n  const addTransaction = useCallback(\n    (payload: StoredTransaction) => {\n      dispatch({\n        type: \"ADD_TRANSACTION\",\n        payload\n      });\n      addNotification({\n        notification: {\n          type: \"transactionStarted\",\n          transaction: payload.transaction,\n          submittedAt: payload.submittedAt,\n          transactionName: payload.transactionName\n        },\n        chainId: payload.transaction.chainId\n      });\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    const updateTransactions = async () => {\n      if (!chainId || !library || !blockNumber) {\n        return;\n      }\n\n      const checkTransaction = async (tx: StoredTransaction) => {\n        if (tx.receipt || !shouldCheck(blockNumber, tx)) {\n          return tx;\n        }\n\n        try {\n          const receipt = await library.getTransactionReceipt(tx.transaction.hash);\n          if (receipt) {\n            const type = receipt.status === 0 ? \"transactionFailed\" : \"transactionSucceed\";\n            addNotification({\n              notification: {\n                type,\n                submittedAt: Date.now(),\n                transaction: tx.transaction,\n                receipt,\n                transactionName: tx.transactionName\n              },\n              chainId\n            });\n\n            return { ...tx, receipt };\n          } else {\n            return { ...tx, lastCheckedBlockNumber: blockNumber };\n          }\n        } catch (error) {\n          console.error(`failed to check transaction hash: ${tx.transaction.hash}`, error);\n        }\n\n        return tx;\n      };\n\n      const chainTransactions = transactions[chainId] ?? [];\n      const newTransactions: StoredTransaction[] = [];\n      for (const tx of chainTransactions) {\n        const newTransaction = await checkTransaction(tx);\n        newTransactions.push(newTransaction);\n      }\n\n      dispatch({ type: \"UPDATE_TRANSACTIONS\", chainId, transactions: newTransactions });\n    };\n\n    updateTransactions();\n  }, [chainId, library, blockNumber]);\n\n  return (\n    <TransactionsContext.Provider value={{ transactions, addTransaction }} children={children} />\n  );\n}\n\nfunction shouldCheck(blockNumber: number, tx: StoredTransaction): boolean {\n  if (tx.receipt) {\n    return false;\n  }\n\n  if (!tx.lastCheckedBlockNumber) {\n    return true;\n  }\n\n  const blocksSinceCheck = blockNumber - tx.lastCheckedBlockNumber;\n  if (blocksSinceCheck < 1) {\n    return false;\n  }\n\n  const minutesPending = (Date.now() - tx.submittedAt) / 1000 / 60;\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9;\n  }\n\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2;\n  }\n\n  // otherwise every block\n  return true;\n}\n","import { ChainId, CHAIN_NAMES, LOCAL_CHAINS, TEST_CHAINS } from \"../constants\";\n\nfunction etherscanNetworkPrefix(chainId: ChainId) {\n  switch (chainId) {\n    case ChainId.Mainnet:\n      return ``;\n    case ChainId.Ropsten:\n    case ChainId.Kovan:\n    case ChainId.Rinkeby:\n    case ChainId.Goerli:\n      return getChainName(chainId).toLocaleLowerCase() + \".\";\n  }\n}\n\nexport function getExplorerAddressLink(address: string, chainId: ChainId) {\n  switch (chainId) {\n    case ChainId.Mainnet:\n    case ChainId.Ropsten:\n    case ChainId.Kovan:\n    case ChainId.Rinkeby:\n    case ChainId.Goerli:\n      return `https://${etherscanNetworkPrefix(chainId)}etherscan.io/address/${address}`;\n    case ChainId.BSC:\n      return `https://bscscan.com/address/${address}`;\n    case ChainId.xDai:\n      return `https://blockscout.com/poa/xdai/address/${address}/transactions`;\n    case ChainId.Polygon:\n      return `https://explorer-mainnet.maticvigil.com/address/${address}/transactions`;\n    case ChainId.Mumbai:\n      return `https://explorer-mumbai.maticvigil.com/address/${address}/transactions`;\n    case ChainId.Harmony:\n      return `https://explorer.harmony.one/address/${address}`;\n    case ChainId.Moonriver:\n      return `https://blockscout.moonriver.moonbeam.network/address/${address}/transactions`;\n  }\n}\n\nexport function getExplorerTransactionLink(transactionHash: string, chainId: ChainId) {\n  switch (chainId) {\n    case ChainId.Mainnet:\n    case ChainId.Ropsten:\n    case ChainId.Kovan:\n    case ChainId.Rinkeby:\n    case ChainId.Goerli:\n      return `https://${etherscanNetworkPrefix(chainId)}etherscan.io/tx/${transactionHash}`;\n    case ChainId.BSC:\n      return `https://bscscan.com/tx/${transactionHash}`;\n    case ChainId.xDai:\n      return `https://blockscout.com/poa/xdai/tx/${transactionHash}/internal-transactions`;\n    case ChainId.Polygon:\n      return `https://explorer-mainnet.maticvigil.com/tx/${transactionHash}/internal-transactions`;\n    case ChainId.Mumbai:\n      return `https://explorer-mumbai.maticvigil.com/tx/${transactionHash}/internal-transactions`;\n    case ChainId.Harmony:\n      return `https://explorer.harmony.one/tx/${transactionHash}`;\n    case ChainId.Moonriver:\n      return `https://blockscout.moonriver.moonbeam.network/tx/${transactionHash}/internal-transactions`;\n  }\n}\n\nexport function getChainName(chainId: ChainId) {\n  return CHAIN_NAMES[chainId];\n}\n\nexport function isTestChain(chainId: ChainId) {\n  return TEST_CHAINS.includes(chainId);\n}\n\nexport function isLocalChain(chainId: ChainId) {\n  return LOCAL_CHAINS.includes(chainId);\n}\n","// @ts-nocheck\n\nimport { ReactNode, useEffect, useState } from \"react\";\nimport { isLocalChain } from \"../helpers\";\nimport { useEthers } from \"../hooks\";\nimport { useBlockNumber } from \"./blockNumber\";\nimport { useConfig, useUpdateConfig } from \"./config\";\nimport multicallABI from \"../constants/abi/MultiCall.json\";\nimport { deployContract } from \"../helpers/contract\";\n\ninterface LocalMulticallProps {\n  children: ReactNode;\n}\n\nenum LocalMulticallState {\n  Unknown,\n  NonLocal,\n  Deploying,\n  Deployed,\n  Error\n}\n\nexport function LocalMulticallProvider({ children }: LocalMulticallProps) {\n  const updateConfig = useUpdateConfig();\n  const { multicallAddresses } = useConfig();\n  const { library, chainId } = useEthers();\n  const [localMulticallState, setLocalMulticallState] = useState(LocalMulticallState.Unknown);\n  const [multicallBlockNumber, setMulticallBlockNumber] = useState<number>();\n  const blockNumber = useBlockNumber();\n\n  useEffect(() => {\n    if (!library || !chainId) {\n      setLocalMulticallState(LocalMulticallState.Unknown);\n    } else if (!isLocalChain(chainId)) {\n      setLocalMulticallState(LocalMulticallState.NonLocal);\n    } else if (multicallAddresses && multicallAddresses[chainId]) {\n      setLocalMulticallState(LocalMulticallState.Deployed);\n    } else if (localMulticallState !== LocalMulticallState.Deploying) {\n      const signer = library.getSigner();\n      if (!signer) {\n        setLocalMulticallState(LocalMulticallState.Error);\n        return;\n      }\n\n      setLocalMulticallState(LocalMulticallState.Deploying);\n\n      const deployMulticall = async () => {\n        try {\n          const { contractAddress, blockNumber } = await deployContract(multicallABI, signer);\n          updateConfig({ multicallAddresses: { [chainId]: contractAddress } });\n          setMulticallBlockNumber(blockNumber);\n          setLocalMulticallState(LocalMulticallState.Deployed);\n        } catch {\n          setLocalMulticallState(LocalMulticallState.Error);\n        }\n      };\n      deployMulticall();\n    }\n  }, [library, chainId]);\n\n  const awaitingMulticallBlock =\n    multicallBlockNumber && blockNumber && blockNumber < multicallBlockNumber;\n\n  if (\n    localMulticallState === LocalMulticallState.Deploying ||\n    (localMulticallState === LocalMulticallState.Deployed && awaitingMulticallBlock)\n  ) {\n    return <div>Deploying multicall...</div>;\n  } else if (localMulticallState === LocalMulticallState.Error) {\n    return <div>Error deploying multicall contract</div>;\n  } else {\n    return <>{children}</>;\n  }\n}\n","export function shortenString(str: string) {\n  return str.substring(0, 6) + \"...\" + str.substring(str.length - 4);\n}\n","import { utils } from \"ethers\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Falsy } from \"../model/types\";\nimport { shortenString } from \"./common\";\n\nexport function shortenAddress(address: string): string {\n  try {\n    const formattedAddress = utils.getAddress(address);\n    return shortenString(formattedAddress);\n  } catch {\n    throw new TypeError(\"Invalid input, address can't be parsed\");\n  }\n}\n\nexport function shortenIfAddress(address: string | Falsy): string {\n  if (typeof address === \"string\" && address.length > 0) {\n    return shortenAddress(address);\n  }\n  return \"\";\n}\n\nexport function compareAddress(firstAddress: string, secondAddress: string): number {\n  try {\n    const parsedFirstAddress = BigNumber.from(firstAddress);\n    const parsedSecondAddress = BigNumber.from(secondAddress);\n\n    if (parsedFirstAddress.gt(parsedSecondAddress)) {\n      return 1;\n    }\n\n    if (parsedFirstAddress.lt(parsedSecondAddress)) {\n      return -1;\n    }\n\n    return 0;\n  } catch {\n    throw new TypeError(\"Invalid input, address can't be parsed\");\n  }\n}\n\nexport function addressEqual(firstAddress: string, secondAddress: string): boolean {\n  try {\n    return utils.getAddress(firstAddress) === utils.getAddress(secondAddress);\n  } catch {\n    throw new TypeError(\"Invalid input, address can't be parsed\");\n  }\n}\n","import { Falsy } from \"../model/types\";\nimport { shortenString } from \"./common\";\n\nexport function shortenTransactionHash(transactionHash: string): string {\n  if (transactionHash.length < 10) {\n    throw new TypeError(\"Invalid input, transaction hash need to have at least 10 characters\");\n  }\n\n  return shortenString(transactionHash);\n}\n\nexport function shortenIfTransactionHash(transactionHash: string | Falsy): string {\n  if (typeof transactionHash === \"string\" && transactionHash.length > 0) {\n    return shortenTransactionHash(transactionHash);\n  }\n  return \"\";\n}\n","import { ContractFactory, ethers } from \"ethers\";\n\ninterface ContractAbi {\n  abi: ethers.ContractInterface;\n  bytecode: ethers.utils.BytesLike;\n}\n\nexport async function deployContract(\n  contractAbi: ContractAbi,\n  signer: ethers.providers.JsonRpcSigner\n): Promise<ethers.providers.TransactionReceipt> {\n  const factory = new ContractFactory(contractAbi.abi, contractAbi.bytecode, signer);\n  const contract = await factory.deploy();\n  return await contract.deployTransaction.wait();\n}\n","import { ReactNode } from \"react\";\nimport { MULTICALL_ADDRESSES } from \"../constants\";\nimport { Config } from \"../model/config/Config\";\nimport { ConfigProvider } from \"../providers/config/provider\";\nimport { BlockNumberProvider } from \"./blockNumber/provider\";\nimport { ChainStateProvider } from \"./chainState\";\nimport { useConfig } from \"./config/context\";\nimport { EthersProvider } from \"./EthersProvider\";\nimport { NotificationsProvider } from \"./notifications/provider\";\nimport { NetworkActivator } from \"./NetworkActivator\";\nimport { TransactionProvider } from \"./transactions/provider\";\nimport { LocalMulticallProvider } from \"./LocalMulticallProvider\";\n\ninterface DAppProviderProps {\n  children: ReactNode;\n  config: Config;\n}\n\nexport function DAppProvider({ config, children }: DAppProviderProps) {\n  return (\n    <ConfigProvider config={config}>\n      <DAppProviderWithConfig>{children}</DAppProviderWithConfig>\n    </ConfigProvider>\n  );\n}\n\ninterface WithConfigProps {\n  children: ReactNode;\n}\n\nfunction DAppProviderWithConfig({ children }: WithConfigProps) {\n  const { multicallAddresses } = useConfig();\n  const multicallAddressesMerged = { ...MULTICALL_ADDRESSES, ...multicallAddresses };\n\n  return (\n    <EthersProvider>\n      <BlockNumberProvider>\n        <NetworkActivator />\n        <LocalMulticallProvider>\n          <ChainStateProvider multicallAddresses={multicallAddressesMerged}>\n            <NotificationsProvider>\n              <TransactionProvider>{children}</TransactionProvider>\n            </NotificationsProvider>\n          </ChainStateProvider>\n        </LocalMulticallProvider>\n      </BlockNumberProvider>\n    </EthersProvider>\n  );\n}\n","import { TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { useCallback, useState } from \"react\";\nimport { useTransactionsContext } from \"../providers\";\nimport { TransactionStatus, TransactionOptions } from \"../../src\";\n\nexport function usePromiseTransaction(chainId: number | undefined, options?: TransactionOptions) {\n  const [state, setState] = useState<TransactionStatus>({ status: \"None\" });\n  const { addTransaction } = useTransactionsContext();\n\n  const promiseTransaction = useCallback(\n    async (transactionPromise: Promise<TransactionResponse>) => {\n      if (!chainId) return;\n      let transaction: TransactionResponse | undefined = undefined;\n      try {\n        transaction = await transactionPromise;\n\n        setState({ transaction, status: \"Mining\", chainId });\n        addTransaction({\n          transaction: {\n            ...transaction,\n            chainId: chainId\n          },\n          submittedAt: Date.now(),\n          transactionName: options?.transactionName\n        });\n        const receipt = await transaction.wait();\n        setState({ receipt, transaction, status: \"Success\", chainId });\n        return receipt;\n      } catch (e: any) {\n        const errorMessage = e.error?.message ?? e.reason ?? e.data?.message ?? e.message;\n        if (transaction) {\n          setState({ status: \"Fail\", transaction, receipt: e.receipt, errorMessage, chainId });\n        } else {\n          setState({ status: \"Exception\", errorMessage, chainId });\n        }\n        return undefined;\n      }\n    },\n    [chainId, setState, addTransaction, options]\n  );\n\n  return { promiseTransaction, state };\n}\n","// @ts-nocheck\n\nimport { TransactionOptions } from \"../../src\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { useCallback, useState } from \"react\";\nimport { useEthers } from \"./useEthers\";\nimport { usePromiseTransaction } from \"./usePromiseTransaction\";\nimport { LogDescription } from \"ethers/lib/utils\";\n\nexport function connectContractToSigner(\n  contract: Contract,\n  options?: TransactionOptions,\n  library?: Web3Provider\n) {\n  if (contract.signer) {\n    return contract;\n  }\n\n  if (options?.signer) {\n    return contract.connect(options.signer);\n  }\n\n  if (library?.getSigner()) {\n    return contract.connect(library.getSigner());\n  }\n\n  throw new TypeError(\"No signer available in contract, options or library\");\n}\n\nexport function useContractFunction(\n  contract: Contract,\n  functionName: string,\n  options?: TransactionOptions\n) {\n  const { library, chainId } = useEthers();\n  const { promiseTransaction, state } = usePromiseTransaction(chainId, options);\n  const [events, setEvents] = useState<LogDescription[] | undefined>(undefined);\n\n  const send = useCallback(\n    async (...args: any[]) => {\n      const contractWithSigner = connectContractToSigner(contract, options, library);\n      const receipt = await promiseTransaction(contractWithSigner[functionName](...args));\n      if (receipt?.logs) {\n        const events = receipt.logs\n          .filter((log) => log.address === contract.address)\n          .map((log) => contract.interface.parseLog(log));\n        setEvents(events);\n      }\n    },\n    [contract, functionName, options, library]\n  );\n\n  return { send, state, events };\n}\n","import { MultiCallABI } from \"../constants\";\nimport { useMulticallAddress } from \"./useMulticallAddress\";\nimport { Falsy } from \"../model/types\";\nimport { useContractCall } from \"./useContractCall\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\n\nexport function useEtherBalance(address: string | Falsy): BigNumber | undefined {\n  const multicallAddress = useMulticallAddress();\n  const [etherBalance] =\n    useContractCall(\n      multicallAddress &&\n        address && {\n          abi: MultiCallABI,\n          address: multicallAddress,\n          method: \"getEthBalance\",\n          args: [address]\n        }\n    ) ?? [];\n  return etherBalance;\n}\n","import { BigNumber } from \"@ethersproject/bignumber\";\nimport { ERC20Interface } from \"../constants\";\nimport { Falsy } from \"../model/types\";\nimport { useContractCall } from \"./useContractCall\";\n\nexport function useTokenBalance(\n  tokenAddress: string | Falsy,\n  address: string | Falsy\n): BigNumber | undefined {\n  const [tokenBalance] =\n    useContractCall(\n      address &&\n        tokenAddress && {\n          abi: ERC20Interface,\n          address: tokenAddress,\n          method: \"balanceOf\",\n          args: [address]\n        }\n    ) ?? [];\n  return tokenBalance;\n}\n","import { BigNumber } from \"@ethersproject/bignumber\";\nimport { ERC20Interface } from \"../constants\";\nimport { Falsy } from \"../model/types\";\nimport { useContractCall } from \"./useContractCall\";\n\nexport function useTokenAllowance(\n  tokenAddress: string | Falsy,\n  ownerAddress: string | Falsy,\n  spenderAddress: string | Falsy\n): BigNumber | undefined {\n  const [allowance] =\n    useContractCall(\n      ownerAddress &&\n        spenderAddress &&\n        tokenAddress && {\n          abi: ERC20Interface,\n          address: tokenAddress,\n          method: \"allowance\",\n          args: [ownerAddress, spenderAddress]\n        }\n    ) ?? [];\n  return allowance;\n}\n","import { useEffect, useState } from \"react\";\n\nfunction getItem(key: string) {\n  if (typeof window === \"undefined\") {\n    return null;\n  }\n\n  const item = window.localStorage.getItem(key);\n  if (item !== null) {\n    try {\n      return JSON.parse(item);\n    } catch {\n      // ignore error\n    }\n  }\n}\n\nfunction setItem(key: string, value: any) {\n  if (value === undefined) {\n    window.localStorage.removeItem(key);\n  } else {\n    const toStore = JSON.stringify(value);\n    window.localStorage.setItem(key, toStore);\n    return JSON.parse(toStore);\n  }\n}\n\nexport function useLocalStorage(key: string) {\n  const [value, setValue] = useState(() => getItem(key));\n\n  useEffect(() => {\n    setValue(getItem(key));\n  }, [key]);\n\n  useEffect(() => {\n    setItem(key, value);\n  }, [value, key]);\n\n  return [value, setValue] as const;\n}\n","import { useMemo } from \"react\";\nimport { useTransactionsContext } from \"../providers\";\nimport { useEthers } from \"./useEthers\";\n\nexport function useTransactions() {\n  const { chainId, account } = useEthers();\n  const { addTransaction, transactions } = useTransactionsContext();\n\n  const filtered = useMemo(() => {\n    if (chainId === undefined || !account) {\n      return [];\n    }\n    return (transactions[chainId] ?? []).filter((x) => x.transaction.from === account);\n  }, [transactions, chainId, account]);\n\n  return {\n    transactions: filtered,\n    addTransaction\n  };\n}\n","import { useEffect, useRef } from \"react\";\n\n// https://usehooks-typescript.com/react-hook/use-interval\nexport function useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(callback);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay === null) {\n      return;\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay);\n\n    return () => clearInterval(id);\n  }, [delay]);\n}\n","import { useMemo } from \"react\";\nimport { Notification, useNotificationsContext } from \"../providers\";\nimport { useEthers } from \"./useEthers\";\nimport { useInterval } from \"./useInterval\";\nimport { useConfig } from \"../providers/config/context\";\n\nfunction getExpiredNotifications(notifications: Notification[], expirationPeriod: number) {\n  const timeFromCreation = (creationTime: number) => Date.now() - creationTime;\n\n  return notifications.filter(\n    (notification) => timeFromCreation(notification.submittedAt) >= expirationPeriod\n  );\n}\n\nexport function useNotifications() {\n  const { chainId, account } = useEthers();\n  const { addNotification, notifications, removeNotification } = useNotificationsContext();\n  const {\n    notifications: { checkInterval, expirationPeriod }\n  } = useConfig();\n\n  const chainNotifications = useMemo(() => {\n    if (chainId === undefined || !account) {\n      return [];\n    }\n    return notifications[chainId] ?? [];\n  }, [notifications, chainId, account]);\n\n  useInterval(() => {\n    if (!chainId) {\n      return;\n    }\n\n    const expiredNotification = getExpiredNotifications(chainNotifications, expirationPeriod);\n    for (const notification of expiredNotification) {\n      removeNotification({ notificationId: notification.id, chainId });\n    }\n  }, checkInterval);\n\n  return {\n    notifications: chainNotifications,\n    addNotification,\n    removeNotification\n  };\n}\n","import { TransactionRequest } from \"@ethersproject/abstract-provider\";\nimport { TransactionOptions } from \"../../src\";\nimport { useEthers } from \"./useEthers\";\nimport { usePromiseTransaction } from \"./usePromiseTransaction\";\n\nexport function useSendTransaction(options?: TransactionOptions) {\n  const { library, chainId } = useEthers();\n  const { promiseTransaction, state } = usePromiseTransaction(chainId, options);\n\n  const sendTransaction = async (transactionRequest: TransactionRequest) => {\n    const signer = options?.signer || library?.getSigner();\n    if (signer) {\n      await promiseTransaction(signer.sendTransaction(transactionRequest));\n    }\n  };\n\n  return { sendTransaction, state };\n}\n","// @ts-nocheck\n\nimport { useBlockNumber } from \"../providers/blockNumber/context\";\nimport { BigNumber } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport { useEthers } from \"./useEthers\";\n\nexport function useGasPrice(): BigNumber | undefined {\n  const { library } = useEthers();\n  const blockNumber = useBlockNumber();\n  const [gasPrice, setGasPrice] = useState<BigNumber | undefined>();\n\n  async function updateGasPrice() {\n    setGasPrice(await library?.getGasPrice());\n  }\n\n  useEffect(() => {\n    updateGasPrice();\n  }, [library, blockNumber]);\n\n  return gasPrice;\n}\n","import { useEffect, useState } from \"react\";\nimport { useEthers } from \"./useEthers\";\n\nexport function useLookupAddress() {\n  const { account, library } = useEthers();\n  const [ens, setEns] = useState<string | null>();\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (account && library) {\n      library\n        ?.lookupAddress(account)\n        .then((name) => {\n          if (mounted) {\n            setEns(name);\n          }\n        })\n        .catch(() => setEns(null));\n    }\n\n    return () => {\n      mounted = false;\n    };\n  }, [account, library]);\n\n  return ens;\n}\n","import { useEffect, useRef } from \"react\";\nimport { useEthers } from \"@usedapp/core\";\nimport styled from \"@emotion/styled\";\nimport Jazzicon from \"@metamask/jazzicon\";\n\nconst StyledIdenticon = styled.div`\n  height: 1rem;\n  width: 1rem;\n  border-radius: 1.125rem;\n  background-color: black;\n`;\n\nexport default function Identicon() {\n  const ref = useRef<HTMLDivElement>();\n  const { account } = useEthers();\n\n  useEffect(() => {\n    if (account && ref.current) {\n      ref.current.innerHTML = \"\";\n      ref.current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)));\n    }\n  }, [account]);\n\n  return <StyledIdenticon ref={ref as any} />;\n}\n","import { Button, Box, Text } from \"@chakra-ui/react\";\nimport { useEthers, useEtherBalance } from \"../hooks\";\nimport { formatEther } from \"@ethersproject/units\";\nimport Identicon from \"../Identicon\";\n\n//import { DAppProvider } from \"@usedapp/core\";\n//import { ChainId } from \"@usedapp/core\";\n\n//import { DAppProvider } from \"../providers\";\n//import { ChainId } from \"../constants\";\n//import { NATIVE_CURRENCY } from \"../constants\";\n\ntype Props = {\n  handleOpenModal: any;\n};\n\nexport default function ConnectButton({ handleOpenModal }: Props) {\n  const { activateBrowserWallet, account, chainId } = useEthers();\n  const etherBalance = useEtherBalance(account);\n\n  function handleConnectWallet() {\n    activateBrowserWallet();\n  }\n\n  return account ? (\n    <Box display=\"flex\" alignItems=\"center\" background=\"gray.700\" borderRadius=\"xl\" py=\"0\">\n      <Box px=\"3\">\n        <Text color=\"white\" fontSize=\"md\">\n          {etherBalance && parseFloat(formatEther(etherBalance)).toFixed(3)}\n          {chainId === 4002\n            ? \" tFTM\"\n            : chainId === 250\n            ? \" FTM\"\n            : chainId === 97\n            ? \" tBNB\"\n            : chainId === 56\n            ? \" BNB\"\n            : \" ETH\"}\n        </Text>\n      </Box>\n      <Button\n        onClick={handleOpenModal}\n        bg=\"gray.800\"\n        border=\"1px solid transparent\"\n        _hover={{\n          border: \"1px\",\n          borderStyle: \"solid\",\n          borderColor: \"blue.400\",\n          backgroundColor: \"gray.700\"\n        }}\n        borderRadius=\"xl\"\n        m=\"1px\"\n        px={3}\n        height=\"38px\"\n      >\n        <Text color=\"white\" fontSize=\"md\" fontWeight=\"medium\" mr=\"2\">\n          {account &&\n            `${account.slice(0, 6)}...${account.slice(account.length - 4, account.length)}`}\n        </Text>\n        <Identicon />\n      </Button>\n    </Box>\n  ) : (\n    <Button onClick={handleConnectWallet}>Connect to a wallet</Button>\n  );\n}\n","import {\n  Box,\n  Button,\n  Flex,\n  Link,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Text\n} from \"@chakra-ui/react\";\nimport { ExternalLinkIcon, CopyIcon } from \"@chakra-ui/icons\";\nimport { useEthers } from \"@usedapp/core\";\nimport Identicon from \"../Identicon\";\n\ntype Props = {\n  isOpen: any;\n  onClose: any;\n};\n\nexport default function AccountModal({ isOpen, onClose }: Props) {\n  const { account, deactivate } = useEthers();\n\n  // Add a function to handle deactivating account\n  function handleDeactivateAccount() {\n    deactivate();\n    onClose();\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered size=\"md\">\n      <ModalOverlay />\n      <ModalContent\n        background=\"gray.900\"\n        border=\"1px\"\n        borderStyle=\"solid\"\n        borderColor=\"gray.700\"\n        borderRadius=\"3xl\"\n      >\n        <ModalHeader color=\"white\" px={4} fontSize=\"lg\" fontWeight=\"medium\">\n          Account\n        </ModalHeader>\n        <ModalCloseButton\n          color=\"white\"\n          fontSize=\"sm\"\n          _hover={{\n            color: \"whiteAlpha.700\"\n          }}\n        />\n        <ModalBody pt={0} px={4}>\n          <Box\n            borderRadius=\"3xl\"\n            border=\"1px\"\n            borderStyle=\"solid\"\n            borderColor=\"gray.600\"\n            px={5}\n            pt={4}\n            pb={2}\n            mb={3}\n          >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n              <Text color=\"gray.400\" fontSize=\"sm\">\n                Connected with MetaMask\n              </Text>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                borderColor=\"blue.800\"\n                borderRadius=\"3xl\"\n                color=\"blue.500\"\n                fontSize=\"13px\"\n                fontWeight=\"normal\"\n                px={2}\n                height=\"26px\"\n                _hover={{\n                  background: \"none\",\n                  borderColor: \"blue.300\",\n                  textDecoration: \"underline\"\n                }}\n                onClick={handleDeactivateAccount}\n              >\n                Change\n              </Button>\n            </Flex>\n            <Flex alignItems=\"center\" mt={2} mb={4} lineHeight={1}>\n              <Identicon />\n              <Text color=\"white\" fontSize=\"xl\" fontWeight=\"semibold\" ml=\"2\" lineHeight=\"1.1\">\n                {account &&\n                  `${account.slice(0, 6)}...${account.slice(account.length - 4, account.length)}`}\n              </Text>\n            </Flex>\n            <Flex alignContent=\"center\" m={3}>\n              <Button\n                variant=\"link\"\n                color=\"gray.400\"\n                fontWeight=\"normal\"\n                fontSize=\"sm\"\n                _hover={{\n                  textDecoration: \"none\",\n                  color: \"whiteAlpha.800\"\n                }}\n              >\n                <CopyIcon mr={1} />\n                Copy Address\n              </Button>\n              <Link\n                fontSize=\"sm\"\n                display=\"flex\"\n                alignItems=\"center\"\n                href={`https://bscscan.com/address/${account}`}\n                isExternal\n                color=\"gray.400\"\n                ml={6}\n                _hover={{\n                  color: \"whiteAlpha.800\",\n                  textDecoration: \"underline\"\n                }}\n              >\n                <ExternalLinkIcon mr={1} />\n                View on Explorer\n              </Link>\n            </Flex>\n          </Box>\n        </ModalBody>\n\n        <ModalFooter\n          justifyContent=\"end\"\n          background=\"gray.700\"\n          borderBottomLeftRadius=\"3xl\"\n          borderBottomRightRadius=\"3xl\"\n          p={6}\n        >\n          <Text color=\"white\" textAlign=\"left\" fontWeight=\"medium\" fontSize=\"md\">\n            Your transactions willl appear here...\n          </Text>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { IconContext } from \"react-icons\";\nimport { AiOutlineMenu, AiOutlineClose } from \"react-icons/ai\";\n\nimport { SidebarData } from \"./SidebarData\";\nimport Submenu from \"./Submenu\";\n\nimport { ChakraProvider, useDisclosure } from \"@chakra-ui/react\";\nimport theme from \"@chakra-ui/theme\";\nimport ConnectButton from \"./ConnectButton\";\nimport AccountModal from \"./AccountModal\";\nimport \"@fontsource/inter\";\n\nconst Nav = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 5rem;\n  background-color: #141b25;\n`;\n\nconst SidebarNav = styled.div<{ sidebar: boolean }>`\n    width: 250px;\n    height: 100vh;\n    background-color: #141b25;\n    position: fixed;\n    top 0;\n    left: ${({ sidebar }) => (sidebar ? \"0\" : \"-100%\")};\n`;\n\nconst NavIcon = styled(Link)`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 5rem;\n  font-size: 2rem;\n  margin-left: 2rem;\n`;\n\nconst ConnectButtonBox = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  height: 5rem;\n  background-color: #141b25;\n  padding-right: 2rem;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  gap: 80vmax;\n  align-items: center;\n  direction: row;\n  height: 5rem;\n  background-color: #141b25;\n`;\n\nconst SidebarWrap = styled.div``;\n\nconst Sidebar: FC = () => {\n  const [sidebar, setSidebar] = React.useState(false);\n  const showSidebar = () => setSidebar(!sidebar);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <IconContext.Provider value={{ color: \"#fff\" }}>\n      <Header>\n        <Nav>\n          <NavIcon to=\"#\" onClick={showSidebar}>\n            <AiOutlineMenu />\n          </NavIcon>\n        </Nav>\n        <ConnectButtonBox>\n          <ChakraProvider theme={theme}>\n            <ConnectButton handleOpenModal={onOpen} />\n            <AccountModal isOpen={isOpen} onClose={onClose} />\n          </ChakraProvider>\n        </ConnectButtonBox>\n      </Header>\n      <SidebarNav sidebar={sidebar}>\n        <SidebarWrap>\n          <NavIcon to=\"#\" onClick={showSidebar}>\n            <AiOutlineClose />\n          </NavIcon>\n          {SidebarData.map((item, index) => {\n            return <Submenu item={item} key={index} />;\n          })}\n        </SidebarWrap>\n      </SidebarNav>\n    </IconContext.Provider>\n  );\n};\n\nexport default Sidebar;\n","//import { ERC20Interface } from \"@usedapp/core/src/constants\";\n//import { Falsy } from \"@usedapp/core/src/model/types\";\nimport { \n  useContractCall, \n  //useContractFunction, \n  //useTokenBalance, \n  //useEthers \n} from \"@usedapp/core\";\n\nimport KittyCakeAbi from \"../abi/KittyCake.json\";\n\nimport { utils, ethers } from \"ethers\";\n//import { Contract } from \"@ethersproject/contracts\";\n\nconst tokenKittyCake = \"0xc22e8114818a918260662375450e19ac73d32852\";\nconst interfaceKittyCake = new utils.Interface(KittyCakeAbi);\n\nexport function GetTotalDividendsDistributed() {\n  //const contractKittyCake = new Contract(tokenKittyCake, interfaceKittyCake)\n\n  const [tokenBalance]: any =\n    useContractCall({\n      abi: interfaceKittyCake,\n      address: tokenKittyCake,\n      method: \"getTotalDividendsDistributed\",\n      args: []\n    }) ?? [];\n  return tokenBalance;\n}\n","//import { ERC20Interface } from \"@usedapp/core/src/constants\";\nimport { Falsy } from \"@usedapp/core/src/model/types\";\nimport { \n  useContractCall, \n  //useContractFunction, \n  //useTokenBalance, \n  //useEthers \n} from \"@usedapp/core\";\n\n//import KittyCakeAbi from \"./KittyCake.json\";\nimport MoolahAbi from \"./moolahAbi.json\";\nimport NFTAbi from \"./NFTAbi.json\";\n\nimport { utils, ethers } from \"ethers\";\n//import { Contract } from \"@ethersproject/contracts\";\n\n//import { BigNumber } from \"@ethersproject/bignumber\";\n// import { getAddress } from '@ethersproject/address';\n\n// using my account\n//\ttokenNFT.sol => NFTAbi.json\n//\t\tfunction monstersOwned(address _address) public view returns(uinst256[]);\n//\t\tfunction powerupsOwned(address _address) public view returns(uint256[]);\n//\t\tfunction train(uint256 _id) public nonpayable;\n//\t\tfunction monsters(uint256) public view returns(string rarity, uint256 level, uint256 cooldown, uint256 boost, uint256 boost, uint256 code);\n// \tmoolahAbi.json\n//\t\tfunction balanceOf(address account) public view returns(uint256);\n\nconst tokenMoolah = \"0xE51BB42f0F6D01B872cdc7e1764d53b2a81cf0aF\";\nconst interfaceMoolah = new utils.Interface(MoolahAbi);\n\nconst tokenNFT = \"0x56536c54abB2d2d2512965Af01C98550EDB15EF9\";\nconst interfaceNFT = new utils.Interface(NFTAbi);\n\nexport function BalanceOf(address: string | Falsy) {\n  const [tokenBalance]: any =\n    useContractCall({\n      abi: interfaceMoolah,\n      address: tokenMoolah,\n      method: \"balanceOf\",\n      args: [address]\n    }) ?? [];\n  return tokenBalance;\n}\n\nexport function MonstersOwned(address: string | Falsy) {\n  const [monsterArray]: any =\n    useContractCall({\n      abi: interfaceNFT,\n      address: tokenNFT,\n      method: \"monstersOwned\",\n      args: [address]\n    }) ?? [];\n  return monsterArray;\n}\n\nexport function PowerupsOwned() {\n  const [tokenBalance]: any =\n    useContractCall({\n      abi: interfaceNFT,\n      address: tokenNFT,\n      method: \"powerupsOwned\",\n      args: []\n    }) ?? [];\n  return tokenBalance;\n}\n\nexport function Train(_id: string | Falsy) {\n  const [tokenBalance]: any =\n    useContractCall({\n      abi: interfaceNFT,\n      address: tokenNFT,\n      method: \"train\",\n      args: [_id]\n    }) ?? [];\n  return tokenBalance;\n}\n\nexport function Monsters(address: string | Falsy) {\n  const t1: any =\n    useContractCall({\n      abi: interfaceNFT,\n      address: tokenNFT,\n      method: \"monsters\",\n      args: [address]\n    }) ?? [];\n  return { t1 };\n}\n\nexport function TokenURI(address: string | Falsy) {\n  const [tokenURI]: any =\n    useContractCall({\n      abi: interfaceNFT,\n      address: tokenNFT,\n      method: \"tokenURI\",\n      args: [address]\n    }) ?? [];\n  return tokenURI;\n}\n\nexport function GameOwner() {\n  const [tokenURI]: any =\n    useContractCall({\n      abi: interfaceNFT,\n      address: tokenNFT,\n      method: \"gameOwner\",\n      args: []\n    }) ?? [];\n  return tokenURI;\n}\n\nexport function BaseURI() {\n  const [baseURI]: any =\n    useContractCall({\n      abi: interfaceNFT,\n      address: tokenNFT,\n      method: \"baseURI\",\n      args: []\n    }) ?? [];\n  return baseURI;\n}\n\nexport function CooldownBlocks() {\n  const [cooldownBlocks]: any =\n    useContractCall({\n      abi: interfaceNFT,\n      address: tokenNFT,\n      method: \"cooldownBlocks\",\n      args: []\n    }) ?? [];\n  return cooldownBlocks;\n}\n\nexport function CooledOFF(_id: string | Falsy) {\n  const [cooledOFF]: any =\n    useContractCall({\n      abi: interfaceNFT,\n      address: tokenNFT,\n      method: \"cooledOFF\",\n      args: [_id]\n    }) ?? [];\n  return cooledOFF;\n}\n\nexport function OwnerOf(_id: string | Falsy) {\n  const [owner]: any =\n    useContractCall({\n      abi: interfaceNFT,\n      address: tokenNFT,\n      method: \"ownerOf\",\n      args: [_id]\n    }) ?? [];\n  return owner;\n}\n","import \n//React, \n{ \n\tFC \n} from \"react\";\nimport { \n\t//Text, \n\tButton \n} from \"@chakra-ui/react\";\nimport styled from \"styled-components\";\n\n//import { ethers } from \"ethers\";\nimport { \n\tformatEther, \n\t//parseUnits, \n\tformatUnits \n} from \"@ethersproject/units\";\n//import { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { useEtherBalance, useTokenBalance, useEthers } from \"../hooks\";\n\nimport { GetTotalDividendsDistributed } from \"../abi/KittyCake\";\nimport {\n  BalanceOf,\n  MonstersOwned,\n  //PowerupsOwned,\n  Train,\n  Monsters,\n  //TokenURI,\n  GameOwner,\n  //BaseURI,\n  //CooldownBlocks,\n  //CooledOFF,\n  OwnerOf\n} from \"../abi/BlockCreatures\";\n\n//import { MonsterObject } from \"../models/MonsterObject\";\n\nconst BlockCreatures = styled.span`\n  color: green;\n`;\n\n//type MonsterObjectProps = {\n//  monsterObject: MonsterObject;\n//};\n\n//const ListMonsters: FC<MonsterObjectProps> = ({ monsterObject }) => {\n//  const [subnav, setSubnav] = React.useState(false);\n//  const showSubnav = () => setSubnav(!subnav);\n//\n//  return <></>;\n//};\n\nconst Overview: FC = () => {\n  const { account } = useEthers();\n  const etherBalance = useEtherBalance(account);\n  console.log(\"Account: \", useEtherBalance(account));\n\n  const TrainMonster0 = () => {\n    const monster = \"0x23AE\";\n    Train(monster);\n  };\n\n  // Network tokens\n  //const tokenWBNB = \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\";\n  //const tokenBUSD = \"0xe9e7cea3dedca5984780bafc599bd69add087d56\";\n\n  // Test BSC Contracts\n  //\t\tMeowMoon\n  const tokenMeowMoon = \"0x1970e6047bcbca6c78b57b6e0b1006abe629a630\";\n  const myBalance = useTokenBalance(tokenMeowMoon, account);\n  const randoAccount = \"0xd0de77a730383499ff1ac931151ac6097ac09f8c\";\n  var randoBalance = useTokenBalance(tokenMeowMoon, randoAccount);\n\n  //\t\tKittyCake\n  const tokenKittyCake = \"0xc22e8114818a918260662375450e19ac73d32852\";\n  const randoAccount2 = \"0x9a372e6797919473b5751b8853c7f46ef9e07615\";\n  const rando2Balance = useTokenBalance(tokenKittyCake, randoAccount2);\n  //const contractKittyCake = new Contract(tokenKittyCake, interfaceKittyCake) // so far does nothing\n  const contractDividends = GetTotalDividendsDistributed();\n\n  //\t\tBlock Creatures\n  //const moolahAddress = \"0xE51BB42f0F6D01B872cdc7e1764d53b2a81cf0aF\";\n  //const myMoolahBalance = useTokenBalance(moolahAddress, account);\n\n  //const NFTAddress = \"0x56536c54abB2d2d2512965Af01C98550EDB15EF9\";\n  // function monsters(uint256) public view returns(string rarity, uint256 level, uint256 cooldown, uint256 boost, uint256 code);\n  const _id = \"0x1F93\";\n  const balanceMoolah = BalanceOf(account);\n  //const monsterAddresses = MonstersOwned(account);\n  //const monster0 = monsterAddresses == [] ? monsterAddresses[0] : \"\"; // needs to be made asynch\n  //const testMonster = BaseURI();\n  //const cooldownBlocks = CooledOFF(_id);\n  console.log(\"Monsters Owned: \");\n  console.log(MonstersOwned(account));\n  console.log(\"Monster Data: \");\n  console.log(Monsters(_id));\n  console.log(\"Game Owner: \");\n  console.log(GameOwner());\n  console.log(\"Monster Owner: \");\n  console.log(OwnerOf(_id));\n  //console.log(testMonster)\n  //console.log(cooldownBlocks);\n  console.log(\"RandoBalance: \", randoBalance);\n\n  return (\n    <>\n      <div className=\"overview\">Overview</div>\n      <div>$BNB Balance: {etherBalance && formatEther(etherBalance)} </div>\n      <div>$MeowMoon Balance: {myBalance && formatUnits(myBalance, 9)}</div>\n      <div>$MeowMoon Rando Balance: {randoBalance && formatUnits(randoBalance, 9)}</div>\n      <div>$KittyCake Rando Balance: {rando2Balance && formatUnits(rando2Balance, 18)}</div>\n      <div>$KittyCake Total Payout: {contractDividends && formatEther(contractDividends)}</div>\n      <br></br>\n      <BlockCreatures>\n        <div>\n          $Moolah Balance via 'balanceOf': {balanceMoolah && formatUnits(balanceMoolah, 18)}\n        </div>\n        <div>$Moolah NFT List by address: {}</div>\n      </BlockCreatures>\n      <Button colorScheme=\"blue\" onClick={TrainMonster0}>\n        Button\n      </Button>\n    </>\n  );\n};\n//<div>$KittyCake Total Payout: {totalDividends && formatUnits(totalDividends, 18)}</div>\nexport default Overview;\n/*\nlet provider;\nwindow.ethereum.enable().then(provider = new ethers.providers.Web3Provider(window.ethereum));\nconst signer = provider.getSigner();\nconst decimals = 10 ** 18;\n\nasync function connect() {\n\tconsole.log(\"Button Pressed\")\n\tawait ethereum.request({ method: 'eth_requestAccounts' });\n\tgetAccount();\n\n}\n\nasync function getAccount() {\n\tconst accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n\tconst _account = accounts[0];\n\t//console.log(\"Wallet connected to: \", _account)\n\tif (accounts != 0) {\n\t\tdocument.getElementById(\"connect\").innerText = \"CONNECTED\";\n\t}\n}\n\n\nconst moolahContract = new ethers.Contract(moolahAddress, moolahAbi, provider);\nconst moolahSign = moolahContract.connect(signer);\n\nconst NFTContract = new ethers.Contract(NFTAddress, NFTAbi, provider);\nconst NFTSign = NFTContract.connect(signer);\n\n\n////////////////////////\n//UNIVERSAL\n////////////////////////\nasync function upper_bar() {\n\tmyAddress = await signer.getAddress();\n\t_balance = await moolahContract.balanceOf(myAddress);\n\tbalance = parseInt(_balance._hex)/decimals\n\tdocument.getElementById(\"balance\").innerText = \"WALLET: \" + balance.toPrecision(6);\n\n\n}\n\n\n////////////////////////\n//MINT NFTS\n////////////////////////\nasync function fetchData(_id) {\n\tlet creepURI = await NFTContract.tokenURI(_id);\n\t//console.log('Fetching URI');\n\treturn _data = $.getJSON(creepURI+'.json', function(json) {\n\t\t//console.log('Fetching JSON');\n\t});\n\n}\n\nasync function fetch_monsters(address){\n\twindow.post = function(url, data) {\n\t  return fetch(url, {method: \"POST\", body: data});\n\t}\n\treturn response = (await post(\"https://www.blockcreatures.co/address\", address)).json()\n\t// return response = (await post(\"http://127.0.0.1:5000//address\", address)).json()\n\n}\n\nasync function fetch_creatures() {\n\tmyAddress = await signer.getAddress();\n\t//let res = await NFTContract.monstersOwned(myAddress);\n\t//console.log(res)\n\n\tlet res = await fetch_monsters(myAddress);\n\t//console.log(res)\n\tlet monsters = []\n\tfor (let i = 0; i < res.length; i++) {\n\t\tif (res[i]['code'] <= 7) {\n\t\t\tmonsters.push(res[i]['id'])\n\t\t}\n\t}\n\n\tconst _length = monsters.length;\n\tlet _num = 1;\n\tlet _nonce = 0;\n\tlet _block = await provider.getBlockNumber();\n\tlet _cooldown =  await NFTContract.cooldownBlocks()\n\t//loop through _length times and update cards\n\tfor (let i = 0; i <= (Number(_length) - 1); i++) {\n\t\tlet _id = monsters[_nonce];\n\t\tlet owner = await NFTContract.ownerOf(_id);\n\n\t\tif (owner === myAddress) {\n\n\t\t\tlet creepImage = await fetchData(_id);\n\t\t\tdocument.getElementById(\"creature\" + _num).src = creepImage['image'];\n\t\t\t//Update Monster Data\n\t\t\tlet creepData = await NFTContract.monsters((_id));\n\t\t\tlet rarity = creepData['rarity'];\n\t\t\tlet image = document.getElementById(\"creature\" + _num);\n\t\t\tdocument.getElementById(\"rarity\" + _num).innerText = \"RARITY: \" + (creepData['rarity']).toUpperCase();\n\t\t\tdocument.getElementById(\"id\" + _num).innerText = \"ID: \" + (_id);\n\t\t\tdocument.getElementById(\"level\" + _num).innerText = \"LEVEL : \" + creepData['level'];\n\t\t\tdocument.getElementById(\"boost\" + _num).innerText = \"BOOST : \" + creepData['boost'];\n\t\t\tdocument.getElementById(\"experience\" + _num).innerText = \"EXPERIENCE : \" + creepData['experience'];\n\t\t\tdocument.getElementById(\"experience2Level\" + _num).innerText = \"EXP NEEDED T0 LEVEL : \" + ((creepData['level']  * await NFTContract.experienceModifier()) + 1);\n\t\t\tdocument.getElementById(\"rewards\" + _num).innerText = \"$MOOLAH RATE : \" + ((creepData['level'] * creepData['boost']) * ((await NFTContract.farmReward())/decimals)).toFixed(5);\n\n\t\t\t//Check if Monster on Cooldown\n\t\t\tlet cooldown = await NFTContract.cooledOFF(_id);\n\n\t\t\tif (cooldown === true) {\n\t\t\t\tdocument.getElementById(\"active\" + _num).innerText = \"READY TO TRAIN\";\n\t\t\t\tdocument.getElementById(\"active\" + _num).style.color = '#7EFF5B';\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//calculate next training\n\t\t\t\tlet cooldown_time = (((parseInt(_cooldown._hex) + parseInt(creepData['cooldown']._hex)) - _block) * 3) / 60;\n\n\t\t\t\tdocument.getElementById(\"active\" + _num).innerText = \"ON COOLDOWN FOR \" + cooldown_time + \" MIN\";\n\t\t\t\tdocument.getElementById(\"active\" + _num).style.color = 'red';\n\t\t\t}\n\t\t\t//Seek to Next Holder\n\t\t\t_num +=1\n\t\t\t_nonce +=1\n\n\t\t}\n\t\telse {\n\t\t\t_nonce += 1\n\t\t}\n\n\n\n\n\n\t}\n\n}\n\n\n////////////////////////\n//BUTTONS\n////////////////////////\nasync function fetchLogs() {\n\tlet topic = ethers.utils.id(\"Train(uint256,string,uint256)\");\n\tlet targetBlock = await provider.getBlockNumber();\n\tconst logs = provider.getLogs({\n\t\taddress: NFTAddress,\n\t\tfromBlock: targetBlock - 10,\n\t\ttoBlock: 'latest',\n\t\ttopics: [ topic ]\n\t});\n\n\treturn logs\n }\n\nasync function train(_id) {\n\tlet id = document.getElementById(\"id\" + _id).innerText;\n\tid = id.replace(\"ID: \",'');\n\tlet creepData = await NFTContract.monsters((id));\n\tlet _rate = ((creepData['level'] * creepData['boost']) * ((await NFTContract.farmReward())/decimals)).toFixed(5);\n\tlet _train = await NFTSign.train(id, {gasLimit: 150000});\n\tdocument.getElementById(\"creature\" + _id).src = \"/static/img/hourglass.gif\";\n\tlet reciept = await provider.waitForTransaction(_train['hash'], 3);\n\n\t//ADD WAIT FOR TX THEN POPUP RESULTS\n\tdocument.getElementById(\"creature\" + _id).src = \"/static/img/hourglass.gif\";\n\tlet events = await NFTContract.interface.parseLog(reciept['logs']['3']).args;\n\tconsole.log(events)\n\tlet result = events['result'];\n\tdocument.getElementById(\"creature\" + _id).src = \"/static/img/hourglass.gif\";\n\tlet base = await NFTContract.farmReward()/decimals\n\n\tconsole.log(result)\n\n\tif (result==='lose') {\n\t\talert(\"Oh no! Your monster completed its training, however was injured...Keep your chin up, you still gained 2 EXP & \" + base + \" $MOOLAH this session.\");\n\t}\n\telse {\n\t\talert(\"Congratulations, your monster completed its training and has gained full experience & \" + _rate  + \"$ MOOLAH Rewards!\");\n\t}\n\n}\nasync function burn(_id) {\n\tlet id = document.getElementById(\"id\" + _id).innerText;\n\tid = id.replace(\"ID: \",'');\n\talert(\"Are you sure you want to burn creature \" + id);\n\tawait NFTSign.burnCreature(id);\n}\n\n\nasync function reload() {\n\tupper_bar()\n\tfetch_creatures()\n\tgetAccount()\n\n}\n\nreload()\nsetInterval(reload, 10000);\n//*/\n","import { Button, Box, Text } from \"@chakra-ui/react\";\nimport { useEthers, useEtherBalance } from \"@usedapp/core\";\n//import { formatEther } from \"@ethersproject/units\";\n\ntype Props = {\n  handleMintModal: any;\n};\n\nexport default function MintButton({ handleMintModal }: Props) {\n  const { activateBrowserWallet, account } = useEthers();\n  //const etherBalance = useEtherBalance(account);\n\n  //function mintNFT() {\n    // some function to mint NFTs\n  //}\n\n  function testClick() {\n    console.log(activateBrowserWallet);\n    console.log(account);\n  }\n\n  return account ? (\n    <>\n      <Box width=\"142px\" background=\"gray.700\" borderRadius=\"xl\" py=\"0\">\n        <Button\n          onClick={handleMintModal}\n          bg=\"gray.800\"\n          border=\"1px solid transparent\"\n          _hover={{\n            border: \"1px\",\n            borderStyle: \"solid\",\n            backgroundColor: \"gray.700\"\n          }}\n          borderRadius=\"xl\"\n          m=\"1px\"\n          px={3}\n          height=\"38px\"\n          width=\"140px\"\n        >\n          <Box px=\"3\">\n            <Text color=\"white\" fontSize=\"md\">\n              Mint NFT(s)\n            </Text>\n          </Box>\n        </Button>\n      </Box>\n    </>\n  ) : (\n    <>\n      <Box width=\"142px\" background=\"red.200\" borderRadius=\"xl\" py=\"0\">\n        <Button\n          onClick={testClick}\n          bg=\"gray.1000\"\n          border=\"1px solid transparent\"\n          _hover={{\n            borderStyle: \"solid\",\n            backgroundColor: \"red.200\"\n          }}\n          borderRadius=\"xl\"\n          m=\"1px\"\n          px={3}\n          height=\"38px\"\n          width=\"140px\"\n        >\n          <Box px=\"3\">\n            <Text color=\"white\" fontSize=\"md\">\n              Mint NFT(s)\n            </Text>\n          </Box>\n        </Button>\n      </Box>\n      <br />\n      <Text color=\"red\" fontSize=\"md\">\n        Connect BSC wallet to mint . . .\n      </Text>\n    </>\n  );\n}\n","import \n//React, \n{ FC } \nfrom \"react\";\n//import { Box, Button, Text } from \"@chakra-ui/react\";\nimport styled from \"styled-components\";\n\n//import { ethers } from \"ethers\";\nimport { \n  formatEther, \n  //parseUnits, \n  //formatUnits \n} from \"@ethersproject/units\";\n//import { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\n\n//import { useEthers } from \"@usedapp/core\";\n//import { useEtherBalance } from \"@usedapp/core\";\n//import { useTokenBalance } from \"@usedapp/core\";\n\nimport { useEthers } from \"../hooks/useEthers\";\nimport { useEtherBalance } from \"../hooks/useEtherBalance\";\n//import { useTokenBalance } from \"../hooks/useTokenBalance\";\n\nimport { \n  ChakraProvider, \n  //useDisclosure \n} from \"@chakra-ui/react\";\nimport theme from \"@chakra-ui/theme\";\nimport MintButton from \"../components/MintButton\";\nimport \"@fontsource/inter\";\n\nexport interface ThemeProps {\n  background: string;\n  text: string;\n}\n\nconst MintDefault = styled.div`\n  color: white;\n  background-color: black;\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst MintButtonBox = styled.div`\n  flexDirection=\"column\"\n  align-items: center;\n  height: 5rem;\n  padding-right: 2rem;\n`;\n\nconst Mint: FC = () => {\n  const { account } = useEthers();\n  const etherBalance = useEtherBalance(account);\n\n  return (\n    <>\n      <MintDefault>\n        <div className=\"Mint\">Mint</div>\n        <div>$BNB Balance: {etherBalance && formatEther(etherBalance)} </div>\n        <br></br>\n        <MintButtonBox>\n          <ChakraProvider theme={theme}>\n            <MintButton handleMintModal={account} />\n          </ChakraProvider>\n        </MintButtonBox>\n      </MintDefault>\n    </>\n  );\n};\n\nexport default Mint;\n\n// Header:\n//  Tokens Held\n//  BNB Held\n//  Estimated balance\n// Body:\n//  Have a list of high volume tokens, pie charts of investments\n//  Advert\n//  Needs to list vertical rows indicating: symbol, image?, PCS price, supply, MCap, Liquidity, decimals, balance, balance_units\n//  Tracked wallets\n\n// Seperate Issues:\n//  Charting tools\n//  Voting tools\n//  Sweepwidget clone\n//  NFT Minting\n//  NFT Marketplace\n//  NFT Game\n","import React, { FC, useState } from \"react\";\nimport { Text, Box, Button, VStack, Center, keyframes, Image, Input } from \"@chakra-ui/react\";\nimport styled from \"styled-components\";\n\nimport { Table, Thead, Tbody, Tr, Th, Td, chakra } from \"@chakra-ui/react\";\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\nimport { useTable, useSortBy, Column } from \"react-table\";\n\nimport { ethers, providers } from \"ethers\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { useEtherBalance, useEthers } from \"@usedapp/core\";\n\nimport { useMoralis } from \"react-moralis\";\n\nimport moolahAbi from \"../abi/moolahAbi.json\";\nimport pancakeswapV2 from \"../abi/PancakeswapV2.json\";\nimport pancakeswapV2Pair from \"../abi/PancakeswapV2Pair.json\";\nimport WBNBABI from \"../abi/WBNBABI.json\";\n\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { GridLoader } from \"react-spinners\";\n\nimport { BLACKLISTED_ADDRESSES } from \"../constants\";\n\nconst PortfolioDefault = styled.div`\n  width: 100vw;\n`;\n\nconst spin = keyframes`\n  from {transform: rotate(0deg);}\n  to {transform: rotate(360deg)}\n`;\n\nexport interface tokensExisting {\n  token_address: string;\n  name: string;\n  symbol: string;\n  logo?: string;\n  thumbnail?: string | undefined;\n  decimals: string;\n  balance: string;\n}\n\nexport interface tokenData {\n  token_address: string;\n  name: string;\n  symbol: string;\n  logo?: string | undefined;\n  thumbnail?: string | undefined;\n  decimals: string;\n  balance: string;\n  mcap: string;\n  WBNBPrice: string;\n  accountValue: string;\n  totalSupply: string;\n  pairTokens: string;\n  pairLiquidity: string;\n}\n\nfunction ParseNumber(num: number): string {\n  var v = String(Math.trunc(num));\n  const l = v.length;\n  if (l > 21) v = v.charAt(0) + \".\" + v.substring(1, 2) + \"E\" + String(l - 1);\n  else if (l === 21) v = v.substring(0, 2) + \".\" + v.substring(3, 5) + \"QT\";\n  else if (l === 20) v = v.substring(0, 1) + \".\" + v.substring(2, 4) + \"QT\";\n  else if (l === 19) v = v.charAt(0) + \".\" + v.substring(1, 3) + \"QT\";\n  else if (l === 18) v = v.substring(0, 2) + \".\" + v.substring(3, 5) + \"Q\";\n  else if (l === 17) v = v.substring(0, 1) + \".\" + v.substring(2, 4) + \"Q\";\n  else if (l === 16) v = v.charAt(0) + \".\" + v.substring(1, 3) + \"Q\";\n  else if (l === 15) v = v.substring(0, 2) + \".\" + v.substring(3, 5) + \"T\";\n  else if (l === 14) v = v.substring(0, 1) + \".\" + v.substring(2, 4) + \"T\";\n  else if (l === 13) v = v.charAt(0) + \".\" + v.substring(1, 3) + \"T\";\n  else if (l === 12) v = v.substring(0, 2) + \".\" + v.substring(3, 5) + \"B\";\n  else if (l === 11) v = v.substring(0, 1) + \".\" + v.substring(2, 4) + \"B\";\n  else if (l === 10) v = v.charAt(0) + \".\" + v.substring(1, 3) + \"B\";\n  else if (l === 9) v = v.substring(0, 2) + \".\" + v.substring(3, 5) + \"M\";\n  else if (l === 8) v = v.substring(0, 1) + \".\" + v.substring(2, 4) + \"M\";\n  else if (l === 7) v = v.charAt(0) + \".\" + v.substring(1, 3) + \"M\";\n  else if (l === 6) v = v.substring(0, 2) + \".\" + v.substring(3, 5) + \"K\";\n  else if (l === 5) v = v.substring(0, 1) + \".\" + v.substring(2, 4) + \"K\";\n  else if (l === 4) v = v.charAt(0) + \".\" + v.substring(1, 3) + \"K\";\n  else v = String(num.toFixed(4));\n  return v;\n}\n\nasync function ReloadData(\n  myAddress: string | null | undefined,\n  signer: ethers.providers.JsonRpcSigner,\n  Moralis: any\n) {\n  // First detach old screen table, and splash load scren until finished\n  // splash load but overlay in heiherchy\n  // get monkey and make it spin same as react logo + animated loading text\n  console.log(myAddress, \"\\n\", typeof myAddress);\n\n  var loading = document.getElementById(\"isLoading\");\n  if (loading) loading.hidden = false;\n  const WBNB = \"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\";\n  var tokenData: tokenData[] = [];\n  var tbody = document.createElement(`tbody`);\n  tbody.id = \"table-data\";\n  tbody.className = \"css-0\";\n  document.getElementById(\"table-data\")?.replaceWith(tbody);\n\n  var tr = document.createElement(`tr`);\n  tr.className = \"css-0\";\n\n  var td = document.createElement(`tr`);\n  tr.className = \"css-0\";\n  //<tbody role=\"rowgroup\" id=\"table-data\" class=\"css-0\">\n  //<tr role=\"row\" class=\"css-0\">\n  //<td role=\"cell\" class=\"css-0\">Hello2</td><td role=\"cell\" class=\"css-0\">World</td><td role=\"cell\" class=\"css-0\">World</td><td role=\"cell\" class=\"css-0\">World</td><td role=\"cell\" class=\"css-0\">World</td><td role=\"cell\" class=\"css-0\">World</td><td role=\"cell\" class=\"css-0\">World</td></tr></tbody>\n\n  Moralis.start({\n    appId: \"eUK744wys4D57Et8dIPpzcDXCc4lLp9mqIKWWXBJ\",\n    serverUrl: \"https://wxx9ih2bzamk.usemoralis.com:2053/server\"\n  });\n  const WBNBPrice = await Moralis.Web3API.token.getTokenPrice({ chain: \"bsc\", address: WBNB });\n  await Moralis.Web3API.account\n    .getTokenBalances({ chain: \"bsc\", address: myAddress })\n    .then((result: any) => {\n      let test: tokensExisting[] = result;\n      for (let token of test) {\n        if (!BLACKLISTED_ADDRESSES.includes(token.token_address))\n          ReloadScreenData(token, myAddress, signer, WBNBPrice.usdPrice);\n      }\n    });\n  // deload splash loading screen\n  if (loading) loading.hidden = true;\n}\n\nasync function ReloadScreenData(\n  token: tokensExisting,\n  myAddress: string | null | undefined,\n  signer: ethers.providers.JsonRpcSigner,\n  WBNBPrice: number | string\n) {\n  const WBNB = \"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\";\n  const WBNBContract = new ethers.Contract(WBNB, WBNBABI, signer);\n\n  const pcsV2Factory = \"0xca143ce32fe78f1f7019d7d551a6402fc5350c73\";\n  const pcsV2FactoryContract = new ethers.Contract(pcsV2Factory, pancakeswapV2, signer);\n\n  const accountTokens = formatUnits(token.balance, token.decimals);\n\n  var tokenData: tokenData;\n\n  var contractContract = new ethers.Contract(token.token_address, moolahAbi, signer);\n  await contractContract.functions\n    .totalSupply()\n    .then((result) => {\n      var totalSupply = formatUnits(result[0], token.decimals);\n\n      pcsV2FactoryContract.functions\n        .getPair(token.token_address, WBNB)\n        .then((result) => {\n          var pairAddress = result[0];\n          var pairContract = new ethers.Contract(pairAddress, pancakeswapV2Pair, signer);\n          pairContract.functions\n            .getReserves()\n            .then((result) => {\n              // since decimals for result[0] and result[1] are unknown\n              // if contractAddress > WBNB then result[0] decimals = 18 & result[1]; decimals = token.decimals\n              // else                           result[1] decimals = 18 & result[0]; decimals = token.decimals\n              var tokens2 = sortTokens(token.token_address, WBNB);\n              let pairTokens, pairLiquidity;\n              if (tokens2[0] == WBNB) {\n                pairTokens = formatUnits(result[1], token.decimals);\n                pairLiquidity = formatUnits(result[0], 18);\n              } else {\n                pairTokens = formatUnits(result[0], token.decimals);\n                pairLiquidity = formatUnits(result[1], 18);\n              }\n              var mCap =\n                (Number(totalSupply) / Number(pairTokens)) *\n                Number(pairLiquidity) *\n                Number(WBNBPrice);\n              var accountValue =\n                (Number(accountTokens) / Number(pairTokens)) * Number(pairLiquidity);\n              var tokenPrice = (1 / Number(pairTokens)) * Number(pairLiquidity);\n              accountValue =\n                (accountValue > Number(pairLiquidity)\n                  ? (Number(accountTokens) / Number(totalSupply)) * Number(pairLiquidity)\n                  : accountValue) * Number(WBNBPrice);\n\n              console.log(\n                \"Token Name: \",\n                token.name,\n                \"\\nToken address: \",\n                token.token_address,\n                \"\\nMCap: \",\n                mCap,\n                \"\\nWBNB Price: \",\n                WBNBPrice,\n                \"\\nAccount Value: \",\n                accountValue,\n                \"\\nTotal Supply: \",\n                totalSupply,\n                \"\\nPair Tokens: \",\n                pairTokens,\n                \"\\nPair Liquidity: \",\n                pairLiquidity,\n                \"\\nAccount Tokens: \",\n                accountTokens\n              );\n              tokenData = {\n                token_address: token.token_address,\n                name: token.name,\n                symbol: token.symbol,\n                logo: token.logo,\n                thumbnail: token.thumbnail,\n                decimals: token.decimals,\n                balance: token.balance,\n                mcap: String(mCap),\n                WBNBPrice: String(WBNBPrice),\n                accountValue: String(accountValue),\n                totalSupply: totalSupply,\n                pairTokens: pairTokens,\n                pairLiquidity: pairLiquidity\n              };\n\n              if (Number(pairTokens) != 0 || Number(pairLiquidity) != 0) {\n                var tbody = document.getElementById(\"table-data\");\n                var tr = document.createElement(`tr`);\n                tr.className = \"css-0\";\n\n                var td1 = document.createElement(`td`);\n                td1.className = \"css-0\";\n                td1.textContent = token.token_address;\n                tr.appendChild(td1);\n                tbody?.appendChild(tr);\n\n                var td2 = document.createElement(`td`);\n                td2.className = \"css-0\";\n                td2.textContent = token.name;\n                tr.appendChild(td2);\n                tbody?.appendChild(tr);\n\n                var td3 = document.createElement(`td`);\n                td3.className = \"css-0\";\n                td3.textContent = \"$\" + ParseNumber(tokenPrice); //String(tokenPrice);\n                tr.appendChild(td3);\n                tbody?.appendChild(tr);\n\n                var temp = String(Number(totalSupply));\n                var td4 = document.createElement(`td`);\n                td4.className = \"css-0\";\n                td4.textContent = temp.includes(\"e\") ? temp : ParseNumber(Number(totalSupply)); //String(parseInt(totalSupply));\n                tr.appendChild(td4);\n                tbody?.appendChild(tr);\n\n                var td5 = document.createElement(`td`);\n                td5.className = \"css-0\";\n                td5.textContent = \"$\" + ParseNumber(mCap); //String(mCap);\n                tr.appendChild(td5);\n                tbody?.appendChild(tr);\n\n                var td6 = document.createElement(`td`);\n                td6.className = \"css-0\";\n                td6.textContent = ParseNumber(Number(accountTokens)); //String(accountTokens);\n                tr.appendChild(td6);\n                tbody?.appendChild(tr);\n\n                var td7 = document.createElement(`td`);\n                td7.className = \"css-0\";\n                td7.textContent = \"$\" + ParseNumber(accountValue); //String(accountValue);\n                tr.appendChild(td7);\n                tbody?.appendChild(tr);\n              }\n            })\n            .catch((error) => {\n              console.log(\n                \"Token missing liquidity! \\n(Note: Apefolio currently only supports WBNB pancakeswapV2 pairs)\"\n              );\n              console.log(error);\n            });\n        })\n        .catch((error) => {\n          console.log(\"Token missing WBNB pancakeswapV2 pair\");\n          console.log(error);\n        });\n    })\n    .catch((error) => {\n      console.log(error);\n    }); // API makes this impossible\n}\n\n//export function keccak256(data: BytesLike): string {\n//  return '0x' + sha3.keccak_256(arrayify(data));\n//}\n// returns sorted token addresses, used to handle return values from pairs sorted in this order\nfunction sortTokens(tokenA: string, tokenB: string): string[2] {\n  const tokens: any[2] = tokenA != tokenB && tokenA < tokenB ? [tokenA, tokenB] : [tokenB, tokenA];\n  return tokens[0] != \"0x0000000000000000000000000000000000000000\" && tokens;\n}\n\n// From: https://bscscan.com/address/0x05ff2b0db69458a0750badebc4f9e13add608c7f#code\n// calculates the CREATE2 address for a pair without making any external calls\nfunction pairFor(factory: string, tokenA: string, tokenB: string): string {\n  const tokens: any[2] = sortTokens(tokenA, tokenB);\n  const tokens2 = keccak256(tokens[0] + tokens[1].substring(2));\n  const tokens3 =\n    \"0x00000000000000000000000000000000000000ff\" +\n    factory.substring(2) +\n    keccak256(tokens2).substring(2) +\n    \"d0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66\";\n  console.log(tokens3);\n  const pair = keccak256(tokens3);\n  console.log(pair);\n  return pair.substring(0, 42);\n}\n\n/*\nconst printTokensExisting: FC = () => {\n  const { Moralis, isInitialized, authenticate, user } = useMoralis();\n  Moralis.start({appId: \"eUK744wys4D57Et8dIPpzcDXCc4lLp9mqIKWWXBJ\", serverUrl: \"https://wxx9ih2bzamk.usemoralis.com:2053/server\"});\n    Moralis.Web3API.account.getTokenBalances({chain: 'bsc', address: \"0x1C77905fEAfD85f7fdeD7aD5f871F93C2B11dcfF\"}).then(result => {\n      var screenData = \"\";\n      for(var token of result) {\n        tokens.push({\n          token_address: token.token_address, \n          name: token.name,\n          symbol: token.symbol,\n          logo: token.logo,\n          thumbnail: token.thumbnail,\n          decimals: token.decimals,\n          balance: token.balance\n        });\n        screenData += token.token_address + \" \" + token.name + \" \" + token.symbol + \" \" + token.logo + \" \" + token.thumbnail + \" \" + token.decimals + \" \" + token.balance + \"\\n\";\n      }\n      //console.log(tokens);\n      return(\n        <Text color=\"white\" fontSize=\"md\">{screenData}</Text>\n      );\n    }\n    );\n\n\n  //var result = \"\";\n  //for(var token of tokens) {\n  //  result += token.token_address + \" \" + token.name + \" \" + token.symbol + \" \" + token.logo + \" \" + token.thumbnail + \" \" + token.decimals + \" \" + token.balance + \"\\n\";\n  //}\n  //console.log(result);\n  return(\n    <Text color=\"white\" fontSize=\"md\">error</Text>\n  );\n}\n*/\nexport type TableVariable = {\n  col1: string;\n  col2: string;\n  col3: string;\n  col4: string;\n  col5: string;\n  col6: string;\n  col7: string;\n};\n\nconst Portfolio: FC = () => {\n  const [input, setInput] = useState(\"\");\n\n  // pass table row as state....tf?\n  const [dataTable, setDataTable] = useState();\n\n  var data2 = [\n    {\n      col1: \"Hello2\",\n      col2: \"World\",\n      col3: \"World\",\n      col4: \"World\",\n      col5: \"World\",\n      col6: \"World\",\n      col7: \"World\"\n    },\n    {\n      col1: \"Hello3\",\n      col2: \"World4\",\n      col3: \"World4\",\n      col4: \"World4\",\n      col5: \"World4\",\n      col6: \"World4\",\n      col7: \"World4\"\n    }\n  ];\n  var data = React.useMemo(() => data2, []);\n  //var data = data2;\n  //const data: readonly { col1: string; col2: string; col3: string; col4: string; col5: string; col6: string; col7: string; }[] = data2;\n\n  const columns: Array<\n    Column<{\n      col1: string;\n      col2: string;\n      col3: string;\n      col4: string;\n      col5: string;\n      col6: string;\n      col7: string;\n    }>\n  > = React.useMemo(\n    () => [\n      { Header: \"\", accessor: \"col1\" },\n      { Header: \"TKN\", accessor: \"col2\" },\n      { Header: \"Price\", accessor: \"col3\" },\n      { Header: \"Supply\", accessor: \"col4\" },\n      { Header: \"MCap\", accessor: \"col5\" },\n      { Header: \"Balance\", accessor: \"col6\" },\n      { Header: \"Wallet\", accessor: \"col7\" }\n    ],\n    []\n  );\n\n  const tableInstance = useTable({ columns, data });\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable(\n    { columns, data },\n    useSortBy\n  );\n\n  const { account } = useEthers();\n  const etherBalance = useEtherBalance(account);\n  const { Moralis } = useMoralis();\n  const provider = new ethers.providers.Web3Provider((window as any).ethereum);\n  const signer = provider.getSigner();\n\n  //var data;\n  let tokens: tokensExisting[] = [];\n  var myAddress = \"0x1C77905fEAfD85f7fdeD7aD5f871F93C2B11dcfF\";\n  const WBNB = \"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\";\n  const WBNBContract = new ethers.Contract(WBNB, WBNBABI, signer);\n\n  // all data from pcsV1Factory was migrated, supposedly\n  // try/catch if promise successes, tested with bad pair\n  const pcsV2Factory = \"0xca143ce32fe78f1f7019d7d551a6402fc5350c73\";\n  const pcsV2FactoryContract = new ethers.Contract(pcsV2Factory, pancakeswapV2, signer);\n\n  data2 = [\n    {\n      col1: \"Hello2\",\n      col2: \"World\",\n      col3: \"World\",\n      col4: \"World\",\n      col5: \"World\",\n      col6: \"World\",\n      col7: \"World\"\n    },\n    {\n      col1: \"Hello3\",\n      col2: \"World4\",\n      col3: \"World4\",\n      col4: \"World4\",\n      col5: \"World4\",\n      col6: \"World4\",\n      col7: \"World4\"\n    },\n    {\n      col1: \"Hello6\",\n      col2: \"World6\",\n      col3: \"World2\",\n      col4: \"World2\",\n      col5: \"World2\",\n      col6: \"World2\",\n      col7: \"World2\"\n    }\n  ];\n\n  /*\n    \n    contractContract.balanceOf(pairAddress).then(\n      (result: BigNumber) => {\n        console.log(\"contractContract.balanceOf(pairAddress)\");\n        const pairTokens = result;\n        WBNBContract.balanceOf(pairAddress).then(\n          (result: BigNumber) => {\n            const pairLiquidity = result;\n\n        });\n      });\n  */\n  // 0x1C77905fEAfD85f7fdeD7aD5f871F93C2B11dcfF\n\n  const spinAnimation = `${spin} infinite 2s linear`;\n\n  return (\n    <>\n      <Box>\n        <Text color=\"white\">Apefolio v0.0.01a</Text>\n        <Text color=\"red\">This build of the Apefolio portfolio tool is an alpha version.</Text>\n        <br></br>\n        <Text color=\"white\">\n          This tool fetches data directly from every relevant contract rather than parsing\n          transaction history.\n        </Text>\n        <Text color=\"white\">Thus, making it more accurate than even BSCSCAN.com</Text>\n        <br></br>\n        <Text color=\"white\">\n          To begin, connect ANY BSC wallet (this is used to make the EIP request), then search any\n          valid address and wait for the return results to render.\n        </Text>\n        <Text color=\"white\">(Note1: data will also post your console log)</Text>\n        <Text color=\"white\">\n          (Note2: blacklisted addresses are skipped, for now report scam addresses directly to us)\n        </Text>\n        <br></br>\n        <Input\n          placeholder=\"  target address...\"\n          marginLeft=\"5px\"\n          width=\"500px\"\n          value={input}\n          onInput={(e) => setInput((e.target as HTMLInputElement).value)}\n        />\n        <Button\n          bg=\"gray.800\"\n          color=\"red\"\n          border=\"1px solid transparent\"\n          _hover={{ border: \"1px\", borderStyle: \"solid\", backgroundColor: \"gray.700\" }}\n          borderRadius=\"xl\"\n          m=\"1px\"\n          px={3}\n          height=\"38px\"\n          width=\"140px\"\n          onClick={() => ReloadData(input, signer, Moralis)}\n        >\n          Reload Data\n        </Button>\n        <Text>Test Address0: 0x1C77905fEAfD85f7fdeD7aD5f871F93C2B11dcfF</Text>\n        <Text>Test Address1: 0x2ACE52107F0fA44af03e8b6bf75b8C2A72d69cff</Text>\n      </Box>\n      <Box\n        overflowY=\"auto\"\n        css={{\n          \"&::-webkit-scrollbar\": {\n            width: \"4px\"\n          },\n          \"&::-webkit-scrollbar-track\": {\n            width: \"6px\"\n          },\n          \"&::-webkit-scrollbar-thumb\": {\n            background: \"#282c34\"\n          }\n        }}\n        width=\"100vw\"\n        float=\"left\"\n        height=\"calc(74vh - 80px)\"\n      >\n        <PortfolioDefault>\n          <Table {...getTableProps()}>\n            <Thead>\n              {headerGroups.map((headerGroup: any) => (\n                <Tr {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map((column: any) => (\n                    <Th\n                      {...column.getHeaderProps(column.getSortByToggleProps())}\n                      isNumeric={column.isNumeric}\n                    >\n                      {column.render(\"Header\")}\n                      <chakra.span pl=\"4\">\n                        {column.isSorted ? (\n                          column.isSortedDesc ? (\n                            <TriangleDownIcon aria-label=\"sorted descending\" />\n                          ) : (\n                            <TriangleUpIcon aria-label=\"sorted ascending\" />\n                          )\n                        ) : null}\n                      </chakra.span>\n                    </Th>\n                  ))}\n                </Tr>\n              ))}\n            </Thead>\n            <Tbody {...getTableBodyProps()} id=\"table-data\">\n              {rows.map((row: any) => {\n                prepareRow(row);\n                return (\n                  <Tr {...row.getRowProps()}>\n                    {row.cells.map((cell: any) => (\n                      <Td {...cell.getCellProps()} isNumeric={cell.column.isNumeric}>\n                        {cell.render(\"Cell\")}\n                      </Td>\n                    ))}\n                  </Tr>\n                );\n              })}\n            </Tbody>\n          </Table>\n          <Center>\n            <Box width=\"15vh\" background=\"black\" hidden={true} id=\"isLoading\">\n              <VStack spacing={10} aligh=\"center\">\n                <Box animation={spinAnimation}>\n                  <Image src={require(\"../asset/image/ApeLogo.png\").default} boxSize=\"150px\" />\n                </Box>\n              </VStack>\n              <Text color=\"red\" align=\"center\">\n                L O A D I N G\n              </Text>\n              <GridLoader color=\"red\" />\n            </Box>\n          </Center>\n        </PortfolioDefault>\n      </Box>\n    </>\n  );\n};\n\nexport default Portfolio;\n\n// Header:\n//  Tokens Held\n//  BNB Held\n//  Estimated balance\n// Body:\n//  Have a list of high volume tokens, pie charts of investments\n//  Advert\n//  Needs to list vertical rows indicating: symbol, image?, PCS price, supply, MCap, Liquidity, decimals, balance, balance_units\n//  Tracked wallets\n\n// Seperate Issues:\n//  Charting tools\n//  Voting tools\n//  Sweepwidget clone\n//  NFT Minting\n//  NFT Marketplace\n//  NFT Game\n\n// Problems:\n//  Inputed data loaded in raw html (cannot manipulate with sorting or onclick)\n//  loading data animation does not wait until render\n//  chakra buttons overlay sidebar\n//  add wbnb\n//  ipfs routing\n//  list current wallet\n//  button to connect to bscscan.com/address\n//  button to copy address\n//  something onscreen when nothing loads (wallet isnt connected)\n//  invalid address error(s)\n\n//  create contract\n//    tokens held buy address\n//    iterate through tokens\n//    return token data\n","import \n//React, \n{ FC } \nfrom \"react\";\n//import { Text, Button } from \"@chakra-ui/react\";\n//import styled from \"styled-components\";\n\n//import { ethers } from \"ethers\";\nimport { formatEther, parseUnits, formatUnits } from \"@ethersproject/units\";\n//import { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { \n  useEtherBalance, \n  //useTokenBalance, \n  useEthers } from \"@usedapp/core\";\n\nconst Stake: FC = () => {\n  const { account } = useEthers();\n  const etherBalance = useEtherBalance(account);\n\n  return (\n    <>\n      <div className=\"Stake\">Farm/ stake</div>\n      <div>$BNB Balance: {etherBalance && formatEther(etherBalance)} </div>\n      <br></br>\n    </>\n  );\n};\n\nexport default Stake;\n\n// Header:\n//  Tokens Held\n//  BNB Held\n//  Estimated balance\n// Body:\n//  Have a list of high volume tokens, pie charts of investments\n//  Advert\n//  Needs to list vertical rows indicating: symbol, image?, PCS price, supply, MCap, Liquidity, decimals, balance, balance_units\n//  Tracked wallets\n\n// Seperate Issues:\n//  Charting tools\n//  Voting tools\n//  Sweepwidget clone\n//  NFT Minting\n//  NFT Marketplace\n//  NFT Game\n","import \n  //React, \n  { FC } \nfrom \"react\";\n//import { Text, Button } from \"@chakra-ui/react\";\n//import styled from \"styled-components\";\n\n//import { ethers } from \"ethers\";\nimport { \n  formatEther, \n  //parseUnits, \n  //formatUnits \n} from \"@ethersproject/units\";\n//import { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { \n  useEtherBalance, \n  //useTokenBalance, \n  useEthers \n} from \"@usedapp/core\";\n\nconst Swap: FC = () => {\n  const { account } = useEthers();\n  const etherBalance = useEtherBalance(account);\n\n  return (\n    <>\n      <div className=\"Stake\">Farm/ stake</div>\n      <div>$BNB Balance: {etherBalance && formatEther(etherBalance)} </div>\n      <br></br>\n    </>\n  );\n};\n\nexport default Swap;\n\n// Header:\n//  Tokens Held\n//  BNB Held\n//  Estimated balance\n// Body:\n//  Have a list of high volume tokens, pie charts of investments\n//  Advert\n//  Needs to list vertical rows indicating: symbol, image?, PCS price, supply, MCap, Liquidity, decimals, balance, balance_units\n//  Tracked wallets\n\n// Seperate Issues:\n//  Charting tools\n//  Voting tools\n//  Sweepwidget clone\n//  NFT Minting\n//  NFT Marketplace\n//  NFT Game\n","import \n  //React, \n  { \n    FC \n  } from \"react\";\nimport \"./App.scss\";\nimport Sidebar from \"./components/Sidebar\";\nimport Overview from \"./pages/Overview\";\nimport Mint from \"./pages/Mint\";\nimport Portfolio from \"./pages/Portfolio\";\nimport Stake from \"./pages/Stake\";\nimport Swap from \"./pages/Swap\";\n//import Configurations from \"./pages/Configurations\";\nimport { \n  //BrowserRouter as Router, \n  HashRouter, \n  Route, \n  Switch } from \"react-router-dom\";\n//import IpfsRouter from \"ipfs-react-router\";\n\nconst App: FC = () => {\n  return (\n    <>\n      <HashRouter>\n        <Sidebar />\n        <Switch>\n          <Route path=\"/overview\" component={Overview} exact></Route>\n          <Route path=\"/mint\" component={Mint} exact></Route>\n          <Route path=\"/portfolio\" component={Portfolio} exact></Route>\n          <Route path=\"/stake\" component={Stake} exact></Route>\n          <Route path=\"/swap\" component={Swap} exact></Route>\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\n\nexport default App;\n","//import { Button, Box, Text } from \"@chakra-ui/react\";\n//import { useEthers, useEtherBalance } from \"@usedapp/core\";\nimport styled from \"styled-components\";\nimport \n  //React, \n  { \n    FC, \n    //useState \n  } from \"react\";\n\n//type Props = {\n  //handleReloadModal: any;\n//};\n\nconst FooterDefault = styled.div`\n  background-color: #282c34;\n  min-width: 100vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(15px);\n  color: white;\n  position: fixed;\n  bottom: 0px;\n`;\n\n// add footer socials\n\nconst Footer: FC = () => {\n  return (\n    <>\n      <FooterDefault>© 2021 Apefolio, Inc</FooterDefault>\n    </>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n//import reportWebVitals from \"./reportWebVitals\";\n\n//import { ChainId } from \"@usedapp/core\";\n//import { DAppProvider } from \"@usedapp/core\";\n\n//import { ChainId } from \"./constants/chainId\";\nimport { DAppProvider } from \"./providers\";\n\nimport { MoralisProvider } from \"react-moralis\";\n\nimport Footer from \"./components/Footer\";\n\n/*\n * ChainIds:\n *  BSC:         56\n *  URL:         https://dataseed1.binance.org/\n *  BSC Testnet: 97\n *  URL:         https://testnet.bscscan.com\n *  FTM:         250\n *  URL:         https://ftmscan.com/\n *  FTM Testnet: 0xfa2 === 4002\n *  URL:         https://rpc.testnet.fantom.network/\n *\n *  Need to deploy multicall contract on BSC Testnet and FTM Mainnet\n */\n\n//const config = {\n//  readOnlyChainId: 56\n  //readOnlyUrls: {\n  //  [ChainId.FTM_Testnet]: \"https://rpc.testnet.fantom.network/\"\n  //}\n//};\n\nReactDOM.render(\n  <React.StrictMode>\n    <DAppProvider config={{}}>\n      <MoralisProvider\n        appId=\"eUK744wys4D57Et8dIPpzcDXCc4lLp9mqIKWWXBJ\"\n        serverUrl=\"https://wxx9ih2bzamk.usemoralis.com:2053/server\"\n      >\n        <App />\n        <div id=\"react-logo\" />\n      </MoralisProvider>\n    </DAppProvider>\n    <Footer />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <MoralisProvider\n      appId=\"eUK744wys4D57Et8dIPpzcDXCc4lLp9mqIKWWXBJ\"\n      serverUrl=\"https://wxx9ih2bzamk.usemoralis.com:2053/server\">\n        <App />\n    </MoralisProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);//*/\n\nexport * from \"./constants\";\nexport * from \"./providers\";\nexport * from \"./hooks\";\nexport * from \"./model\";\nexport * from \"./helpers\";\n"],"sourceRoot":""}